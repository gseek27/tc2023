{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Updated Firebase imports for v10.4.0\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\n\n// Firebase configuration remains the same\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAxG3LGCtQHwZLxIxvFoaplouY5HlNU6JM\",\n  authDomain: \"tc2023-21859.firebaseapp.com\",\n  projectId: \"tc2023-21859\",\n  storageBucket: \"tc2023-21859.appspot.com\",\n  messagingSenderId: \"960022654133\",\n  appId: \"1:960022654133:web:79b8495bce163d7f3322fc\",\n  measurementId: \"G-589259DH29\"\n};\n\n// Initialize Firebase and get the auth instance\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nexport default {\n  name: 'registerUser',\n  data: function () {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    registerOrLogin: function () {\n      signInWithEmailAndPassword(auth, this.email, this.password).then(user => {\n        alert(`Logged in as ${user.user.email}`);\n        this.$router.push('/profile'); // Navigate to profile page\n      }).catch(err => {\n        if (err.code === \"auth/user-not-found\") {\n          this.register();\n        } else {\n          alert(err.message);\n        }\n      });\n    },\n    register: function () {\n      createUserWithEmailAndPassword(auth, this.email, this.password).then(user => {\n        alert(`Account created for ${user.user.email}`);\n        this.$router.push('/profile'); // Navigate to profile page\n      }).catch(err => {\n        alert(err.message);\n      });\n    },\n    registerOrLoginWithGoogle: function () {\n      const provider = new GoogleAuthProvider();\n      signInWithPopup(auth, provider).then(result => {\n        alert(`Logged in as ${result.user.email}`);\n        this.$router.push('/profile'); // Navigate to profile page\n      }).catch(err => {\n        alert(err.message);\n      });\n    }\n  }\n};","map":{"version":3,"names":["initializeApp","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","name","data","email","password","methods","registerOrLogin","then","user","alert","$router","push","catch","err","code","register","message","registerOrLoginWithGoogle","provider","result"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Login.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col s12 m8 offset-m2\">\n                    <div class=\"login card-panel grey lighten-4 black-text center\">\n                        <h3>Register or Login</h3>\n                        <form @submit.prevent=\"registerOrLogin\">\n                            <div class=\"input-field\">\n                                <i class=\"material-icons prefix\">email</i>\n                                <input type=\"text\" id=\"email\" v-model=\"email\">\n                                <label for=\"email\">Email</label>\n                            </div>\n                            <div class=\"input-field\">\n                                <i class=\"material-icons prefix\">lock</i>\n                                <input type=\"password\" id=\"password\" v-model=\"password\">\n                                <label for=\"password\">Password</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-large grey lighten-4 black-text\">Register/Login with Email</button>\n                        </form>\n                        <button v-on:click=\"registerOrLoginWithGoogle\" class=\"btn btn-large grey lighten-4 black-text\">Register/Login with Google</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n// Updated Firebase imports for v10.4.0\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\n\n// Firebase configuration remains the same\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAxG3LGCtQHwZLxIxvFoaplouY5HlNU6JM\",\n    authDomain: \"tc2023-21859.firebaseapp.com\",\n    projectId: \"tc2023-21859\",\n    storageBucket: \"tc2023-21859.appspot.com\",\n    messagingSenderId: \"960022654133\",\n    appId: \"1:960022654133:web:79b8495bce163d7f3322fc\",\n    measurementId: \"G-589259DH29\"\n};\n\n// Initialize Firebase and get the auth instance\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\n\n\nexport default {\n    name: 'registerUser',\n    data: function() {\n        return {\n            email: '',\n            password: ''\n        };\n    },\n    methods: {\n        registerOrLogin: function() {\n            signInWithEmailAndPassword(auth, this.email, this.password)\n            .then(user => {\n                alert(`Logged in as ${user.user.email}`);\n                this.$router.push('/profile'); // Navigate to profile page\n            })\n            .catch(err => {\n                if(err.code === \"auth/user-not-found\") {\n                    this.register();\n                } else {\n                    alert(err.message);\n                }\n            });\n        },\n        register: function() {\n            createUserWithEmailAndPassword(auth, this.email, this.password)\n            .then(user => {\n                alert(`Account created for ${user.user.email}`);\n                this.$router.push('/profile'); // Navigate to profile page\n            })\n            .catch(err => {\n                alert(err.message);\n            });\n        },\n        registerOrLoginWithGoogle: function() {\n            const provider = new GoogleAuthProvider();\n            signInWithPopup(auth, provider)\n            .then(result => {\n                alert(`Logged in as ${result.user.email}`);\n                this.$router.push('/profile'); // Navigate to profile page\n            })\n            .catch(err => {\n                alert(err.message);\n            });\n        }\n    }\n};\n</script>\n\n<style>\ninput {\n    border: 1px solid black !important;\n}\n</style>\n"],"mappings":";AA6BA;AACA,SAASA,aAAY,QAAS,cAAc;AAC5C,SAASC,OAAO,EAAEC,8BAA8B,EAAEC,0BAA0B,EAAEC,kBAAkB,EAAEC,eAAc,QAAS,eAAe;;AAExI;AACA,MAAMC,cAAa,GAAI;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,8BAA8B;EAC1CC,SAAS,EAAE,cAAc;EACzBC,aAAa,EAAE,0BAA0B;EACzCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACnB,CAAC;;AAED;AACA,MAAMC,GAAE,GAAId,aAAa,CAACM,cAAc,CAAC;AACzC,MAAMS,IAAG,GAAId,OAAO,CAACa,GAAG,CAAC;AAIzB,eAAe;EACXE,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,SAAAA,CAAA,EAAW;IACb,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,eAAe,EAAE,SAAAA,CAAA,EAAW;MACxBlB,0BAA0B,CAACY,IAAI,EAAE,IAAI,CAACG,KAAK,EAAE,IAAI,CAACC,QAAQ,EACzDG,IAAI,CAACC,IAAG,IAAK;QACVC,KAAK,CAAE,gBAAeD,IAAI,CAACA,IAAI,CAACL,KAAM,EAAC,CAAC;QACxC,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC,EAAE;MACnC,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;QACV,IAAGA,GAAG,CAACC,IAAG,KAAM,qBAAqB,EAAE;UACnC,IAAI,CAACC,QAAQ,CAAC,CAAC;QACnB,OAAO;UACHN,KAAK,CAACI,GAAG,CAACG,OAAO,CAAC;QACtB;MACJ,CAAC,CAAC;IACN,CAAC;IACDD,QAAQ,EAAE,SAAAA,CAAA,EAAW;MACjB5B,8BAA8B,CAACa,IAAI,EAAE,IAAI,CAACG,KAAK,EAAE,IAAI,CAACC,QAAQ,EAC7DG,IAAI,CAACC,IAAG,IAAK;QACVC,KAAK,CAAE,uBAAsBD,IAAI,CAACA,IAAI,CAACL,KAAM,EAAC,CAAC;QAC/C,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC,EAAE;MACnC,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;QACVJ,KAAK,CAACI,GAAG,CAACG,OAAO,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IACDC,yBAAyB,EAAE,SAAAA,CAAA,EAAW;MAClC,MAAMC,QAAO,GAAI,IAAI7B,kBAAkB,CAAC,CAAC;MACzCC,eAAe,CAACU,IAAI,EAAEkB,QAAQ,EAC7BX,IAAI,CAACY,MAAK,IAAK;QACZV,KAAK,CAAE,gBAAeU,MAAM,CAACX,IAAI,CAACL,KAAM,EAAC,CAAC;QAC1C,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC,EAAE;MACnC,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;QACVJ,KAAK,CAACI,GAAG,CAACG,OAAO,CAAC;MACtB,CAAC,CAAC;IACN;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}