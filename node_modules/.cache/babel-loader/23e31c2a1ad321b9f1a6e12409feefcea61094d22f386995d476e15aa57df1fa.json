{"ast":null,"code":"import { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, doc, getDoc, query, orderBy, getDocs } from 'firebase/firestore';\nimport SideBar from './SideBar.vue';\nimport TrendingPosts from './TrendingPosts.vue';\nexport default {\n  components: {\n    SideBar,\n    TrendingPosts\n  },\n  name: 'ProfilePage',\n  data() {\n    return {\n      tweets: [],\n      loading: true,\n      userID: null,\n      username: '',\n      profileImage: ''\n    };\n  },\n  methods: {\n    async fetchUserProfile(userId) {\n      const db = getFirestore();\n      const userDocRef = doc(db, 'users', userId); // Adjust the path as needed\n      return await getDoc(userDocRef);\n    },\n    async fetchTweets() {\n      const db = getFirestore();\n      const tweetsCollection = collection(db, 'tweets');\n      const tweetsQuery = query(tweetsCollection, orderBy('timestamp', 'desc'));\n      const tweetDocs = await getDocs(tweetsQuery);\n      this.tweets = tweetDocs.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      console.log('Fetched tweets in parent:', this.tweets);\n    }\n  },\n  mounted() {\n    const auth = getAuth();\n    onAuthStateChanged(auth, async user => {\n      if (user) {\n        this.userID = user.uid;\n        const userProfile = await this.fetchUserProfile(user.uid);\n        if (userProfile.exists()) {\n          this.username = userProfile.data().username || ''; // Handle undefined username\n          this.profileImage = userProfile.data().profileImage || ''; // Handle undefined profileImage\n        } else {\n          console.error('User profile does not exist:', user.uid);\n        }\n        this.fetchTweets();\n        this.loading = false;\n      } else {\n        this.loading = false;\n        console.log('User is not authenticated');\n      }\n    });\n  }\n};","map":{"version":3,"names":["getAuth","onAuthStateChanged","getFirestore","collection","doc","getDoc","query","orderBy","getDocs","SideBar","TrendingPosts","components","name","data","tweets","loading","userID","username","profileImage","methods","fetchUserProfile","userId","db","userDocRef","fetchTweets","tweetsCollection","tweetsQuery","tweetDocs","docs","map","id","console","log","mounted","auth","user","uid","userProfile","exists","error"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Profile.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row v-if=\"loading\">\n      <v-col class=\"text-center\">\n        Loading...\n      </v-col>\n    </v-row>\n\n    <!-- Your existing content wrapped in a v-else -->\n    <v-row v-else>\n      <v-row>\n        <v-col cols=\"3\">\n          <SideBar />\n        </v-col>\n        <v-col cols=\"6\">\n          <h1>Your profile page</h1>\n\n          <!-- Profile Picture -->\n          <img :src=\"profileImage\" alt=\"Profile\" width=\"100\" v-if=\"profileImage\" />\n          <input type=\"file\" @change=\"uploadImage\" />\n\n          <!-- Username -->\n          <p>@{{ username }}</p>\n          <input v-model=\"tempUsername\" placeholder=\"Choose a username\" />\n\n          <!-- Submit Button -->\n          <button @click=\"updateProfile\">Update Profile</button>\n\n          <TweetsList :tweets=\"tweets\" @removeTweet=\"removeTweet\" />\n        </v-col>\n\n        <v-col cols=\"3\">\n          <TrendingPosts :topics=\"trendingTopics\" class=\"sideB\" />\n          <WhoToFollow :users=\"usersToFollow\" class=\"sideB\" />\n        </v-col>\n      </v-row>\n    </v-row>\n  </div>\n</template>\n\n\n<script>\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport {\n  getFirestore,\n  collection,\n  doc,\n  getDoc,\n  query,\n  orderBy,\n  getDocs,\n} from 'firebase/firestore';\n\nimport SideBar from './SideBar.vue';\nimport TrendingPosts from './TrendingPosts.vue';\n\n\n\nexport default {\n    components: {\n    SideBar,\n    TrendingPosts\n  },\n  name: 'ProfilePage',\n  data() {\n    return {\n      tweets: [],\n      loading: true,\n      userID: null,\n      username: '',\n      profileImage: '',\n    };\n  },\n  methods: {\n    async fetchUserProfile(userId) {\n      const db = getFirestore();\n      const userDocRef = doc(db, 'users', userId); // Adjust the path as needed\n      return await getDoc(userDocRef);\n    },\n    async fetchTweets() {\n      const db = getFirestore();\n      const tweetsCollection = collection(db, 'tweets');\n      const tweetsQuery = query(\n        tweetsCollection,\n        orderBy('timestamp', 'desc')\n      );\n\n      const tweetDocs = await getDocs(tweetsQuery);\n      this.tweets = tweetDocs.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      console.log('Fetched tweets in parent:', this.tweets);\n    },\n  },\n  mounted() {\n    const auth = getAuth();\n    onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        this.userID = user.uid;\n        const userProfile = await this.fetchUserProfile(user.uid);\n\n        if (userProfile.exists()) {\n          this.username = userProfile.data().username || ''; // Handle undefined username\n          this.profileImage = userProfile.data().profileImage || ''; // Handle undefined profileImage\n        } else {\n          console.error('User profile does not exist:', user.uid);\n        }\n\n        this.fetchTweets();\n        this.loading = false;\n      } else {\n        this.loading = false;\n        console.log('User is not authenticated');\n      }\n    });\n  },\n};\n</script>\n\n\n\n<style scoped>\n.sideB {\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  padding: 0px 10px;\n  margin-top: 0px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"AA0CA,SAASA,OAAO,EAAEC,kBAAiB,QAAS,eAAe;AAC3D,SACEC,YAAY,EACZC,UAAU,EACVC,GAAG,EACHC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,OAAO,QACF,oBAAoB;AAE3B,OAAOC,OAAM,MAAO,eAAe;AACnC,OAAOC,aAAY,MAAO,qBAAqB;AAI/C,eAAe;EACXC,UAAU,EAAE;IACZF,OAAO;IACPC;EACF,CAAC;EACDE,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAACC,MAAM,EAAE;MAC7B,MAAMC,EAAC,GAAIpB,YAAY,CAAC,CAAC;MACzB,MAAMqB,UAAS,GAAInB,GAAG,CAACkB,EAAE,EAAE,OAAO,EAAED,MAAM,CAAC,EAAE;MAC7C,OAAO,MAAMhB,MAAM,CAACkB,UAAU,CAAC;IACjC,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,MAAMF,EAAC,GAAIpB,YAAY,CAAC,CAAC;MACzB,MAAMuB,gBAAe,GAAItB,UAAU,CAACmB,EAAE,EAAE,QAAQ,CAAC;MACjD,MAAMI,WAAU,GAAIpB,KAAK,CACvBmB,gBAAgB,EAChBlB,OAAO,CAAC,WAAW,EAAE,MAAM,CAC7B,CAAC;MAED,MAAMoB,SAAQ,GAAI,MAAMnB,OAAO,CAACkB,WAAW,CAAC;MAC5C,IAAI,CAACZ,MAAK,GAAIa,SAAS,CAACC,IAAI,CAACC,GAAG,CAAEzB,GAAG,KAAM;QACzC0B,EAAE,EAAE1B,GAAG,CAAC0B,EAAE;QACV,GAAG1B,GAAG,CAACS,IAAI,CAAC;MACd,CAAC,CAAC,CAAC;MACHkB,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAClB,MAAM,CAAC;IACvD;EACF,CAAC;EACDmB,OAAOA,CAAA,EAAG;IACR,MAAMC,IAAG,GAAIlC,OAAO,CAAC,CAAC;IACtBC,kBAAkB,CAACiC,IAAI,EAAE,MAAOC,IAAI,IAAK;MACvC,IAAIA,IAAI,EAAE;QACR,IAAI,CAACnB,MAAK,GAAImB,IAAI,CAACC,GAAG;QACtB,MAAMC,WAAU,GAAI,MAAM,IAAI,CAACjB,gBAAgB,CAACe,IAAI,CAACC,GAAG,CAAC;QAEzD,IAAIC,WAAW,CAACC,MAAM,CAAC,CAAC,EAAE;UACxB,IAAI,CAACrB,QAAO,GAAIoB,WAAW,CAACxB,IAAI,CAAC,CAAC,CAACI,QAAO,IAAK,EAAE,EAAE;UACnD,IAAI,CAACC,YAAW,GAAImB,WAAW,CAACxB,IAAI,CAAC,CAAC,CAACK,YAAW,IAAK,EAAE,EAAE;QAC7D,OAAO;UACLa,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEJ,IAAI,CAACC,GAAG,CAAC;QACzD;QAEA,IAAI,CAACZ,WAAW,CAAC,CAAC;QAClB,IAAI,CAACT,OAAM,GAAI,KAAK;MACtB,OAAO;QACL,IAAI,CAACA,OAAM,GAAI,KAAK;QACpBgB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}