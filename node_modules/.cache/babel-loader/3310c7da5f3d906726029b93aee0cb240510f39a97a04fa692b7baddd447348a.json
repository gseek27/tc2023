{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col s12 m8 offset-m2\"\n};\nconst _hoisted_4 = {\n  class: \"login card-panel grey lighten-4 black-text center\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Register\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"input-field\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"material-icons prefix\"\n}, \"email\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"input-field\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"material-icons prefix\"\n}, \"lock\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password\", -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-large grey lighten-4 black-text\"\n}, \"Register with Email\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.register && $options.register(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), _hoisted_8]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _hoisted_11]), _hoisted_12], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.registerWithGoogle && $options.registerWithGoogle(...args)),\n    class: \"btn btn-large grey lighten-4 black-text\"\n  }, \"Register with Google\")])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","args","$options","register","_hoisted_6","_hoisted_7","id","_ctx","email","$event","_hoisted_8","_hoisted_9","_hoisted_10","password","_hoisted_11","_hoisted_12","onClick","registerWithGoogle"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Login.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col s12 m8 offset-m2\">\n                    <div class=\"login card-panel grey lighten-4 black-text center\">\n                        <h3>Register</h3>\n                        <form @submit.prevent=\"register\">\n                            <div class=\"input-field\">\n                                <i class=\"material-icons prefix\">email</i>\n                                <input type=\"text\" id=\"email\" v-model=\"email\">\n                                <label for=\"email\">Email</label>\n                            </div>\n                            <div class=\"input-field\">\n                                <i class=\"material-icons prefix\">lock</i>\n                                <input type=\"password\" id=\"password\" v-model=\"password\">\n                                <label for=\"password\">Password</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-large grey lighten-4 black-text\">Register with Email</button>\n                        </form>\n                        <button v-on:click=\"registerWithGoogle\" class=\"btn btn-large grey lighten-4 black-text\">Register with Google</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, createUserWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAxG3LGCtQHwZLxIxvFoaplouY5HlNU6JM\",\n    authDomain: \"tc2023-21859.firebaseapp.com\",\n    projectId: \"tc2023-21859\",\n    storageBucket: \"tc2023-21859.appspot.com\",\n    messagingSenderId: \"960022654133\",\n    appId: \"1:960022654133:web:79b8495bce163d7f3322fc\",\n    measurementId: \"G-589259DH29\"\n  };\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\nexport default {\n    name: 'registerUser',\n    data: function() {\n        return {\n            email: '',\n            password: ''\n        };\n    },\n    methods: {\n        register: function() {\n            firebase.auth().createUserWithEmailAndPassword(this.email, this.password)\n            .then(user => {\n                alert(`Account created for ${user.user.email}`);\n                this.$router.go({path: this.$router.path});\n            })\n            .catch(err => {\n                alert(err.message);\n            });\n        },\n        registerWithGoogle: function() {\n            const provider = new firebase.auth.GoogleAuthProvider();\n            firebase.auth().signInWithPopup(provider)\n            .then(result => {\n                alert(`Account created for ${result.user.email}`);\n                this.$router.go({path: this.$router.path});\n            })\n            .catch(err => {\n                alert(err.message);\n            });\n        }\n    }\n};\n</script>\n\n<style>\ninput {\n    border: 1px solid black !important;\n}\n</style>\n"],"mappings":";;EAEaA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAsB;;EACxBA,KAAK,EAAC;AAAmD;gCAC1DC,mBAAA,CAAiB,YAAb,UAAQ;;EAEHD,KAAK,EAAC;AAAa;gCACpBC,mBAAA,CAA0C;EAAvCD,KAAK,EAAC;AAAuB,GAAC,OAAK;gCAEtCC,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;;EAEvBF,KAAK,EAAC;AAAa;iCACpBC,mBAAA,CAAyC;EAAtCD,KAAK,EAAC;AAAuB,GAAC,MAAI;iCAErCC,mBAAA,CAAsC;EAA/BC,GAAG,EAAC;AAAU,GAAC,UAAQ;iCAElCD,mBAAA,CAAkG;EAA1FE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAA0C,qBAAmB;;;uBAjBjHI,mBAAA,CAwBM,cAvBFH,mBAAA,CAsBM,OAtBNI,UAsBM,GArBFJ,mBAAA,CAoBM,OApBNK,UAoBM,GAnBFL,mBAAA,CAkBM,OAlBNM,UAkBM,GAjBFN,mBAAA,CAgBM,OAhBNO,UAgBM,GAfFC,UAAiB,EACjBR,mBAAA,CAYO;IAZAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;MAC3BZ,mBAAA,CAIM,OAJNe,UAIM,GAHFC,UAA0C,E,gBAC1ChB,mBAAA,CAA8C;IAAvCE,IAAI,EAAC,MAAM;IAACe,EAAE,EAAC,OAAO;+DAAUC,IAAA,CAAAC,KAAK,GAAAC,MAAA;iDAALF,IAAA,CAAAC,KAAK,E,GAC5CE,UAAgC,C,GAEpCrB,mBAAA,CAIM,OAJNsB,UAIM,GAHFC,WAAyC,E,gBACzCvB,mBAAA,CAAwD;IAAjDE,IAAI,EAAC,UAAU;IAACe,EAAE,EAAC,UAAU;+DAAUC,IAAA,CAAAM,QAAQ,GAAAJ,MAAA;iDAARF,IAAA,CAAAM,QAAQ,E,GACtDC,WAAsC,C,GAE1CC,WAAkG,C,4BAEtG1B,mBAAA,CAAqH;IAAxG2B,OAAK,EAAAjB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAe,kBAAA,IAAAf,QAAA,CAAAe,kBAAA,IAAAhB,IAAA,CAAkB;IAAEb,KAAK,EAAC;KAA0C,sBAAoB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}