{"ast":null,"code":"import { computed } from 'vue';\nimport TweetPost from './TweetPost.vue';\nexport default {\n  name: 'TweetsList',\n  components: {\n    TweetPost\n  },\n  props: {\n    tweets: {\n      type: Array,\n      required: true,\n      default: () => []\n    }\n  },\n  setup(props) {\n    console.log('Tweets prop in TweetsList:', props.tweets);\n    const sortedTweets = computed(() => {\n      return [...props.tweets].sort((a, b) => b.timestamp - a.timestamp);\n    });\n    return {\n      sortedTweets\n    };\n  },\n  methods: {\n    updateTweetCommentedStatus({\n      tweetId,\n      status\n    }) {\n      const tweetToUpdate = this.tweets.find(tweet => tweet.id === tweetId);\n      if (tweetToUpdate) {\n        tweetToUpdate.commented = status;\n      }\n    },\n    updateTweetLikedStatus({\n      tweetId,\n      status\n    }) {\n      const tweetToUpdate = this.tweets.find(tweet => tweet.id === tweetId);\n      if (tweetToUpdate) {\n        tweetToUpdate.liked = status;\n      }\n    },\n    updateTweetRepeatStatus({\n      tweetId,\n      status\n    }) {\n      const tweetToUpdate = this.tweets.find(tweet => tweet.id === tweetId);\n      if (tweetToUpdate) {\n        tweetToUpdate.repeated = status;\n      }\n    },\n    handleTweetDeleted(tweetId) {\n      // Emitting an event so parent component can handle it\n      this.$emit('removeTweet', tweetId);\n    }\n  }\n};","map":{"version":3,"names":["computed","TweetPost","name","components","props","tweets","type","Array","required","default","setup","console","log","sortedTweets","sort","a","b","timestamp","methods","updateTweetCommentedStatus","tweetId","status","tweetToUpdate","find","tweet","id","commented","updateTweetLikedStatus","liked","updateTweetRepeatStatus","repeated","handleTweetDeleted","$emit"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/TweetsList.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"tweet in sortedTweets\" :key=\"tweet.id\">\n      <TweetPost\n        v-if=\"tweet.content\"\n        :tweetData=\"tweet\"\n        @tweetLikedStatusUpdated=\"$emit('tweetLikedStatusUpdated', $event)\"\n        @tweetRepeatStatusUpdated=\"$emit('tweetRepeatStatusUpdated', $event)\"\n        @tweetCommentedStatusUpdated=\"$emit('tweetCommentedStatusUpdated', $event)\"\n        :userId=\"tweet.userId\"\n        @tweetDeleted=\"handleTweetDeleted\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed } from 'vue'\nimport TweetPost from './TweetPost.vue'\n\nexport default {\n  name: 'TweetsList',\n  components: {\n    TweetPost,\n  },\n  props: {\n    tweets: {\n      type: Array,\n      required: true,\n      default: () => [],\n    },\n  },\n  setup(props) {\n    console.log('Tweets prop in TweetsList:', props.tweets)\n    const sortedTweets = computed(() => {\n      return [...props.tweets].sort((a, b) => b.timestamp - a.timestamp)\n    })\n\n    return {\n      sortedTweets,\n    }\n  },\n  methods: {\n  updateTweetCommentedStatus({ tweetId, status }) {\n      const tweetToUpdate = this.tweets.find((tweet) => tweet.id === tweetId)\n      if (tweetToUpdate) {\n        tweetToUpdate.commented = status\n      }\n    },\n    updateTweetLikedStatus({ tweetId, status }) {\n      const tweetToUpdate = this.tweets.find((tweet) => tweet.id === tweetId)\n      if (tweetToUpdate) {\n        tweetToUpdate.liked = status\n      }\n    },\n    updateTweetRepeatStatus({ tweetId, status }) {\n      const tweetToUpdate = this.tweets.find((tweet) => tweet.id === tweetId)\n      if (tweetToUpdate) {\n        tweetToUpdate.repeated = status\n      }\n    },\n    handleTweetDeleted(tweetId) {\n      // Emitting an event so parent component can handle it\n      this.$emit('removeTweet', tweetId)\n    },\n  },\n}\n</script>\n"],"mappings":"AAiBA,SAASA,QAAO,QAAS,KAAI;AAC7B,OAAOC,SAAQ,MAAO,iBAAgB;AAEtC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,KAAKA,CAACN,KAAK,EAAE;IACXO,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAER,KAAK,CAACC,MAAM;IACtD,MAAMQ,YAAW,GAAIb,QAAQ,CAAC,MAAM;MAClC,OAAO,CAAC,GAAGI,KAAK,CAACC,MAAM,CAAC,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,SAAQ,GAAIF,CAAC,CAACE,SAAS;IACnE,CAAC;IAED,OAAO;MACLJ;IACF;EACF,CAAC;EACDK,OAAO,EAAE;IACTC,0BAA0BA,CAAC;MAAEC,OAAO;MAAEC;IAAO,CAAC,EAAE;MAC5C,MAAMC,aAAY,GAAI,IAAI,CAACjB,MAAM,CAACkB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAC,KAAML,OAAO;MACtE,IAAIE,aAAa,EAAE;QACjBA,aAAa,CAACI,SAAQ,GAAIL,MAAK;MACjC;IACF,CAAC;IACDM,sBAAsBA,CAAC;MAAEP,OAAO;MAAEC;IAAO,CAAC,EAAE;MAC1C,MAAMC,aAAY,GAAI,IAAI,CAACjB,MAAM,CAACkB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAC,KAAML,OAAO;MACtE,IAAIE,aAAa,EAAE;QACjBA,aAAa,CAACM,KAAI,GAAIP,MAAK;MAC7B;IACF,CAAC;IACDQ,uBAAuBA,CAAC;MAAET,OAAO;MAAEC;IAAO,CAAC,EAAE;MAC3C,MAAMC,aAAY,GAAI,IAAI,CAACjB,MAAM,CAACkB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAC,KAAML,OAAO;MACtE,IAAIE,aAAa,EAAE;QACjBA,aAAa,CAACQ,QAAO,GAAIT,MAAK;MAChC;IACF,CAAC;IACDU,kBAAkBA,CAACX,OAAO,EAAE;MAC1B;MACA,IAAI,CAACY,KAAK,CAAC,aAAa,EAAEZ,OAAO;IACnC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}