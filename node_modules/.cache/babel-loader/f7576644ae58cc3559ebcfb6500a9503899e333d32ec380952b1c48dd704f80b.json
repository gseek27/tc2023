{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0b442b9e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"tweet-post\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 3,\n  controls: \"\",\n  preload: \"auto\",\n  playsinline: \"\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"actions-row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_avatar = _resolveComponent(\"v-avatar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_router_link, {\n    to: {\n      name: 'profile',\n      params: {\n        username: $data.actualUsername\n      }\n    }\n  }, {\n    default: _withCtx(() => [$data.actualProfileImage ? (_openBlock(), _createBlock(_component_v_avatar, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"img\", {\n        src: $data.actualProfileImage\n      }, null, 8 /* PROPS */, _hoisted_2)]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"]), _createTextVNode(\" Â  \"), $data.actualUsername ? (_openBlock(), _createElementBlock(\"strong\", _hoisted_3, [_createVNode(_component_router_link, {\n    to: {\n      name: 'profile',\n      params: {\n        username: $data.actualUsername\n      }\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"@\" + _toDisplayString($data.actualUsername), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])])) : _createCommentVNode(\"v-if\", true), $props.tweetData.content ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($props.tweetData.content), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Display media based on its type \"), $options.isImage($props.tweetData.imageUrl) || $options.isGif($props.tweetData.imageUrl) ? (_openBlock(), _createBlock(_component_v_img, {\n    key: 2,\n    src: $props.tweetData.imageUrl,\n    \"aspect-ratio\": \"2\"\n  }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Display Video \"), $options.isVideo($props.tweetData.imageUrl) ? (_openBlock(), _createElementBlock(\"video\", _hoisted_5, [_createElementVNode(\"source\", {\n    src: $props.tweetData.imageUrl,\n    type: \"video/mp4\"\n  }, null, 8 /* PROPS */, _hoisted_6), _createTextVNode(\" Your browser does not support the video tag. \")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\"  Comment Icon \"), _createVNode(_component_v_icon, {\n    onClick: _ctx.toggleComment,\n    color: $props.tweetData.commented ? 'blue' : 'gray',\n    class: \"comment-icon\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" mdi-mode_comment \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"color\"]), _createCommentVNode(\" Heart (Like) Icon \"), _createVNode(_component_v_icon, {\n    onClick: $options.toggleLike,\n    color: $props.tweetData.liked ? 'red' : 'gray',\n    class: \"heart-icon\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" mdi-heart \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"color\"]), _createCommentVNode(\" Repeat (Retweet) Icon \"), _createVNode(_component_v_icon, {\n    onClick: $options.toggleRepeat,\n    color: $props.tweetData.repeated ? 'green' : 'gray',\n    class: \"repeat-icon\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" mdi-repeat \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"color\"]), _createCommentVNode(\" Delete Button (Show if the current user has the same userId) \"), $props.userId === $options.currentUserId ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.deleteTweet && $options.deleteTweet(...args))\n  }, \" Delete \")) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","controls","preload","playsinline","_createElementBlock","_hoisted_1","_createVNode","_component_router_link","to","name","params","username","$data","actualUsername","actualProfileImage","_createBlock","_component_v_avatar","key","_createElementVNode","src","_hoisted_2","_hoisted_3","_toDisplayString","$props","tweetData","content","_hoisted_4","_createCommentVNode","$options","isImage","imageUrl","isGif","_component_v_img","isVideo","_hoisted_5","type","_hoisted_7","_component_v_icon","onClick","_ctx","toggleComment","color","commented","toggleLike","liked","toggleRepeat","repeated","userId","currentUserId","_cache","args","deleteTweet"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/TweetPost.vue"],"sourcesContent":["<template>\n  <div class=\"tweet-post\">\n    <router-link\n      :to=\"{ name: 'profile', params: { username: actualUsername } }\"\n    >\n      <v-avatar v-if=\"actualProfileImage\">\n        <img :src=\"actualProfileImage\" />\n      </v-avatar>\n    </router-link>\n    &nbsp;\n    <strong v-if=\"actualUsername\">\n      <router-link\n        :to=\"{ name: 'profile', params: { username: actualUsername } }\"\n        >@{{ actualUsername }}</router-link\n      >\n    </strong>\n\n    <p v-if=\"tweetData.content\">{{ tweetData.content }}</p>\n\n    <!-- Display media based on its type -->\n    <v-img\n      v-if=\"isImage(tweetData.imageUrl) || isGif(tweetData.imageUrl)\"\n      :src=\"tweetData.imageUrl\"\n      aspect-ratio=\"2\"\n    ></v-img>\n\n    <!-- Display Video -->\n    <video\n      v-if=\"isVideo(tweetData.imageUrl)\"\n      controls\n      preload=\"auto\"\n      playsinline\n    >\n      <source :src=\"tweetData.imageUrl\" type=\"video/mp4\" />\n      Your browser does not support the video tag.\n    </video>\n\n    <div class=\"actions-row\">\n\n     <!--  Comment Icon -->\n      <v-icon\n        @click=\"toggleComment\"\n        :color=\"tweetData.commented ? 'blue' : 'gray'\"\n        class=\"comment-icon\"\n      >\n        mdi-mode_comment\n      </v-icon>\n\n\n      <!-- Heart (Like) Icon -->\n      <v-icon\n        @click=\"toggleLike\"\n        :color=\"tweetData.liked ? 'red' : 'gray'\"\n        class=\"heart-icon\"\n      >\n        mdi-heart\n      </v-icon>\n\n      <!-- Repeat (Retweet) Icon -->\n      <v-icon\n        @click=\"toggleRepeat\"\n        :color=\"tweetData.repeated ? 'green' : 'gray'\"\n        class=\"repeat-icon\"\n      >\n        mdi-repeat\n      </v-icon>\n\n      <!-- Delete Button (Show if the current user has the same userId) -->\n      <button v-if=\"userId === currentUserId\" @click=\"deleteTweet\">\n        Delete\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  deleteDoc,\n  updateDoc,\n} from 'firebase/firestore'\nimport { getStorage, ref as storageRef, getDownloadURL } from 'firebase/storage'\nimport { auth } from '/src/firebase/index.js'\n\nexport default {\n  computed: {\n    currentUserId() {\n      return auth.currentUser?.uid\n    },\n  },\n  props: {\n    tweetData: {\n      type: Object,\n      required: true,\n      default: () => ({}),\n    },\n    userId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      videoURL: '',\n      actualUsername: '',\n      actualProfileImage: '',\n    }\n  },\n  mounted() {\n    // Fetch video URL\n    const storagePath = this.tweetData.imageUrl\n    if (storagePath) {\n      const storage = getStorage()\n      const videoRef = storageRef(storage, storagePath)\n      getDownloadURL(videoRef)\n        .then((url) => {\n          this.videoURL = url\n        })\n        .catch((error) => {\n          console.error('Error fetching video URL:', error)\n        })\n    }\n\n    // Fetch user data\n    this.fetchUserData()\n  },\n  methods: {\n    isImage(url) {\n      return /.*\\.(jpeg|jpg|png)/i.test(url)\n    },\n    isGif(url) {\n      return /.*\\.gif/i.test(url)\n    },\n    isVideo(url) {\n      return /.*\\.(mp4|webm|ogg|mov)/i.test(url)\n    },\n    async fetchUserData() {\n      try {\n        const db = getFirestore()\n        const userDocRef = doc(db, 'users', this.tweetData.userId)\n        const userDocSnapshot = await getDoc(userDocRef)\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data()\n          this.actualUsername = userData.username\n          this.actualProfileImage = userData.profileImage\n        } else {\n          console.error('User document does not exist')\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error)\n      }\n    },\n\n    async toggleLike() {\n      const db = getFirestore()\n      const tweetRef = doc(db, 'tweets', this.tweetData.id)\n      const newStatus = !this.tweetData.liked\n      await updateDoc(tweetRef, { liked: newStatus })\n      this.$emit('tweetLikedStatusUpdated', {\n        tweetId: this.tweetData.id,\n        status: newStatus,\n      })\n    },\n    async toggleRepeat() {\n      const db = getFirestore()\n      const tweetRef = doc(db, 'tweets', this.tweetData.id)\n      const newStatus = !this.tweetData.repeated\n      await updateDoc(tweetRef, { repeated: newStatus })\n      this.$emit('tweetRepeatStatusUpdated', {\n        tweetId: this.tweetData.id,\n        status: newStatus,\n      })\n    },\n    async deleteTweet() {\n      try {\n        const db = getFirestore()\n        await deleteDoc(doc(db, 'tweets', this.tweetData.id))\n        this.$emit('tweetDeleted', this.tweetData.id)\n      } catch (error) {\n        console.error('Error deleting tweet:', error)\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.tweet-post {\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  padding: 10px;\n  margin-top: 30px;\n  border-radius: 5px;\n}\n.tweet-post button {\n  display: block;\n  background-color: red;\n  color: white;\n}\n.actions-row {\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n}\n.heart-icon,\n.repeat-icon {\n  margin-right: 20px;\n}\n.actions-row > *:last-child {\n  margin-right: 0;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAY;;;;;;;;;;EA4BnBC,QAAQ,EAAR,EAAQ;EACRC,OAAO,EAAC,MAAM;EACdC,WAAW,EAAX;;;;EAMGH,KAAK,EAAC;AAAa;;;;;;uBApC1BI,mBAAA,CAuEM,OAvENC,UAuEM,GAtEJC,YAAA,CAMcC,sBAAA;IALXC,EAAE;MAAAC,IAAA;MAAAC,MAAA;QAAAC,QAAA,EAAyCC,KAAA,CAAAC;MAAc;IAAA;;sBAE1D,MAEW,CAFKD,KAAA,CAAAE,kBAAkB,I,cAAlCC,YAAA,CAEWC,mBAAA;MAAAC,GAAA;IAAA;wBADT,MAAiC,CAAjCC,mBAAA,CAAiC;QAA3BC,GAAG,EAAEP,KAAA,CAAAE;MAAkB,wBAAAM,UAAA,E;;;;8CAEnB,KAEd,GAAcR,KAAA,CAAAC,cAAc,I,cAA5BT,mBAAA,CAKS,UAAAiB,UAAA,GAJPf,YAAA,CAGCC,sBAAA;IAFEC,EAAE;MAAAC,IAAA;MAAAC,MAAA;QAAAC,QAAA,EAAyCC,KAAA,CAAAC;MAAc;IAAA;;sBACzD,MAAC,C,iBAAD,GAAC,GAAAS,gBAAA,CAAGV,KAAA,CAAAC,cAAc,iB;;;oEAIdU,MAAA,CAAAC,SAAS,CAACC,OAAO,I,cAA1BrB,mBAAA,CAAuD,KAAAsB,UAAA,EAAAJ,gBAAA,CAAxBC,MAAA,CAAAC,SAAS,CAACC,OAAO,oB,mCAEhDE,mBAAA,qCAAwC,EAEhCC,QAAA,CAAAC,OAAO,CAACN,MAAA,CAAAC,SAAS,CAACM,QAAQ,KAAKF,QAAA,CAAAG,KAAK,CAACR,MAAA,CAAAC,SAAS,CAACM,QAAQ,K,cAD/Df,YAAA,CAISiB,gBAAA;;IAFNb,GAAG,EAAEI,MAAA,CAAAC,SAAS,CAACM,QAAQ;IACxB,cAAY,EAAC;yEAGfH,mBAAA,mBAAsB,EAEdC,QAAA,CAAAK,OAAO,CAACV,MAAA,CAAAC,SAAS,CAACM,QAAQ,K,cADlC1B,mBAAA,CAQQ,SARR8B,UAQQ,GAFNhB,mBAAA,CAAqD;IAA5CC,GAAG,EAAEI,MAAA,CAAAC,SAAS,CAACM,QAAQ;IAAEK,IAAI,EAAC;wDAAc,gDAEvD,E,wCAEAjB,mBAAA,CAkCM,OAlCNkB,UAkCM,GAhCLT,mBAAA,mBAAsB,EACrBrB,YAAA,CAMS+B,iBAAA;IALNC,OAAK,EAAEC,IAAA,CAAAC,aAAa;IACpBC,KAAK,EAAElB,MAAA,CAAAC,SAAS,CAACkB,SAAS;IAC3B1C,KAAK,EAAC;;sBACP,MAED,C,iBAFC,oBAED,E;;2CAGA2B,mBAAA,uBAA0B,EAC1BrB,YAAA,CAMS+B,iBAAA;IALNC,OAAK,EAAEV,QAAA,CAAAe,UAAU;IACjBF,KAAK,EAAElB,MAAA,CAAAC,SAAS,CAACoB,KAAK;IACvB5C,KAAK,EAAC;;sBACP,MAED,C,iBAFC,aAED,E;;2CAEA2B,mBAAA,2BAA8B,EAC9BrB,YAAA,CAMS+B,iBAAA;IALNC,OAAK,EAAEV,QAAA,CAAAiB,YAAY;IACnBJ,KAAK,EAAElB,MAAA,CAAAC,SAAS,CAACsB,QAAQ;IAC1B9C,KAAK,EAAC;;sBACP,MAED,C,iBAFC,cAED,E;;2CAEA2B,mBAAA,kEAAqE,EACvDJ,MAAA,CAAAwB,MAAM,KAAKnB,QAAA,CAAAoB,aAAa,I,cAAtC5C,mBAAA,CAES;;IAFgCkC,OAAK,EAAAW,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtB,QAAA,CAAAuB,WAAA,IAAAvB,QAAA,CAAAuB,WAAA,IAAAD,IAAA,CAAW;KAAE,UAE7D,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}