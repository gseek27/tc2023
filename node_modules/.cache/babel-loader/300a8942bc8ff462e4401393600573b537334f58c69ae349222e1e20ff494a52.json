{"ast":null,"code":"import { getFirestore, doc, getDoc, deleteDoc, updateDoc } from 'firebase/firestore';\nimport { getStorage, ref as storageRef, getDownloadURL } from 'firebase/storage';\nimport { auth } from '/src/firebase/index.js';\nexport default {\n  computed: {\n    currentUserId() {\n      return auth.currentUser?.uid;\n    }\n  },\n  props: {\n    tweetData: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    },\n    userId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      videoURL: '',\n      actualUsername: '',\n      actualProfileImage: ''\n    };\n  },\n  mounted() {\n    // Fetch video URL\n    const storagePath = this.tweetData.imageUrl;\n    if (storagePath) {\n      const storage = getStorage();\n      const videoRef = storageRef(storage, storagePath);\n      getDownloadURL(videoRef).then(url => {\n        this.videoURL = url;\n      }).catch(error => {\n        console.error('Error fetching video URL:', error);\n      });\n    }\n\n    // Fetch user data\n    this.fetchUserData();\n  },\n  methods: {\n    toggleLike() {\n      this.$emit('likeToggled', this.tweetData.id);\n    },\n    toggleRepeat() {\n      this.$emit('repeatToggled', this.tweetData.id);\n    },\n    isImage(url) {\n      return /.*\\.(jpeg|jpg|png)/i.test(url);\n    },\n    isGif(url) {\n      return /.*\\.gif/i.test(url);\n    },\n    isVideo(url) {\n      return /.*\\.(mp4|webm|ogg|mov)/i.test(url);\n    },\n    async fetchUserData() {\n      try {\n        const db = getFirestore();\n        const userDocRef = doc(db, 'users', this.tweetData.userId);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          this.actualUsername = userData.username;\n          this.actualProfileImage = userData.profileImage;\n        } else {\n          console.error('User document does not exist');\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    },\n    async toggleLike() {\n      try {\n        const db = getFirestore();\n        const tweetRef = doc(db, 'tweets', this.tweetData.id);\n        this.tweetData.liked = !this.tweetData.liked; // Toggle local state\n        await updateDoc(tweetRef, {\n          liked: this.tweetData.liked\n        }); // Update Firestore\n      } catch (error) {\n        console.error('Error toggling like:', error);\n      }\n    },\n    async toggleRepeat() {\n      try {\n        const db = getFirestore();\n        const tweetRef = doc(db, 'tweets', this.tweetData.id);\n        this.tweetData.repeated = !this.tweetData.repeated; // Toggle local state\n        await updateDoc(tweetRef, {\n          repeated: this.tweetData.repeated\n        }); // Update Firestore\n      } catch (error) {\n        console.error('Error toggling repeat:', error);\n      }\n    },\n    async deleteTweet() {\n      try {\n        const db = getFirestore();\n        await deleteDoc(doc(db, 'tweets', this.tweetData.id));\n        this.$emit('tweetDeleted', this.tweetData.id);\n      } catch (error) {\n        console.error('Error deleting tweet:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["getFirestore","doc","getDoc","deleteDoc","updateDoc","getStorage","ref","storageRef","getDownloadURL","auth","computed","currentUserId","currentUser","uid","props","tweetData","type","Object","required","default","userId","String","data","videoURL","actualUsername","actualProfileImage","mounted","storagePath","imageUrl","storage","videoRef","then","url","catch","error","console","fetchUserData","methods","toggleLike","$emit","id","toggleRepeat","isImage","test","isGif","isVideo","db","userDocRef","userDocSnapshot","exists","userData","username","profileImage","tweetRef","liked","repeated","deleteTweet"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/TweetPost.vue"],"sourcesContent":["<template>\n  <div class=\"tweet-post\">\n    <router-link :to=\"{ name: 'profile', params: { username: actualUsername } }\">\n      <v-avatar v-if=\"actualProfileImage\">\n        <img :src=\"actualProfileImage\" />\n      </v-avatar>\n    </router-link>\n    &nbsp;\n    <strong v-if=\"actualUsername\">\n      <router-link :to=\"{ name: 'profile', params: { username: actualUsername } }\">@{{ actualUsername }}</router-link>\n    </strong>\n    \n    <p v-if=\"tweetData.content\">{{ tweetData.content }}</p>\n\n    <!-- Display media based on its type -->\n    <v-img v-if=\"isImage(tweetData.imageUrl) || isGif(tweetData.imageUrl)\" :src=\"tweetData.imageUrl\" aspect-ratio=\"2\"></v-img>\n\n    <!-- Display Video -->\n    <video v-if=\"isVideo(tweetData.imageUrl)\" controls preload=\"auto\" playsinline>\n      <source :src=\"tweetData.imageUrl\" type=\"video/mp4\" />\n      Your browser does not support the video tag.\n    </video>\n\n    <div class=\"actions-row\">\n      <!-- Heart (Like) Icon -->\n      <v-icon @click=\"toggleLike\" :color=\"tweetData.liked ? 'red' : 'gray'\" class=\"heart-icon\">\n        mdi-heart\n      </v-icon>\n\n      <!-- Repeat (Retweet) Icon -->\n      <v-icon @click=\"toggleRepeat\" :color=\"tweetData.repeated ? 'green' : 'gray'\" class=\"repeat-icon\">\n        mdi-repeat\n      </v-icon>\n\n      <!-- Delete Button (Show if the current user has the same userId) -->\n      <button v-if=\"userId === currentUserId\" @click=\"deleteTweet\">Delete</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getFirestore, doc, getDoc, deleteDoc, updateDoc } from 'firebase/firestore';\nimport { getStorage, ref as storageRef, getDownloadURL } from 'firebase/storage';\nimport { auth } from '/src/firebase/index.js';\n\nexport default {\n  computed: {\n    currentUserId() {\n      return auth.currentUser?.uid;\n    }\n  },\n  props: {\n    tweetData: {\n      type: Object,\n      required: true,\n      default: () => ({}),\n    },\n    userId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      videoURL: '',\n      actualUsername: '',\n      actualProfileImage: '',\n    };\n  },\n  mounted() {\n    // Fetch video URL\n    const storagePath = this.tweetData.imageUrl;\n    if (storagePath) {\n      const storage = getStorage();\n      const videoRef = storageRef(storage, storagePath);\n      getDownloadURL(videoRef)\n        .then((url) => {\n          this.videoURL = url;\n        })\n        .catch((error) => {\n          console.error('Error fetching video URL:', error);\n        });\n    }\n\n    // Fetch user data\n    this.fetchUserData();\n  },\n  methods: {\n     toggleLike() {\n      this.$emit('likeToggled', this.tweetData.id);\n    },\n    toggleRepeat() {\n      this.$emit('repeatToggled', this.tweetData.id);\n    },\n    isImage(url) {\n      return /.*\\.(jpeg|jpg|png)/i.test(url);\n    },\n    isGif(url) {\n      return /.*\\.gif/i.test(url);\n    },\n    isVideo(url) {\n      return /.*\\.(mp4|webm|ogg|mov)/i.test(url);\n    },\n    async fetchUserData() {\n      try {\n        const db = getFirestore();\n        const userDocRef = doc(db, 'users', this.tweetData.userId);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          this.actualUsername = userData.username;\n          this.actualProfileImage = userData.profileImage;\n        } else {\n          console.error('User document does not exist');\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    },\n    async toggleLike() {\n      try {\n        const db = getFirestore();\n        const tweetRef = doc(db, 'tweets', this.tweetData.id);\n        this.tweetData.liked = !this.tweetData.liked; // Toggle local state\n        await updateDoc(tweetRef, { liked: this.tweetData.liked }); // Update Firestore\n      } catch (error) {\n        console.error('Error toggling like:', error);\n      }\n    },\n    async toggleRepeat() {\n      try {\n        const db = getFirestore();\n        const tweetRef = doc(db, 'tweets', this.tweetData.id);\n        this.tweetData.repeated = !this.tweetData.repeated; // Toggle local state\n        await updateDoc(tweetRef, { repeated: this.tweetData.repeated }); // Update Firestore\n      } catch (error) {\n        console.error('Error toggling repeat:', error);\n      }\n    },\n    async deleteTweet() {\n      try {\n        const db = getFirestore();\n        await deleteDoc(doc(db, 'tweets', this.tweetData.id));\n        this.$emit('tweetDeleted', this.tweetData.id);\n      } catch (error) {\n        console.error('Error deleting tweet:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.tweet-post {\n  margin-bottom: 90px;\n  border: 1px solid #e0e0e0;\n  padding: 10px;\n  margin-top: 30px;\n  border-radius: 5px;\n}\n.tweet-post button {\n  display: block;\n  background-color: red;\n  color: white;\n}\n.actions-row {\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n}\n.heart-icon, .repeat-icon {\n  margin-right: 20px; // Adjusted margin for better spacing\n}\n.actions-row > *:last-child {\n  margin-right: 0;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}