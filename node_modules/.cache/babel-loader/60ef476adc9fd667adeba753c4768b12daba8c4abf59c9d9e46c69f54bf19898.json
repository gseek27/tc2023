{"ast":null,"code":"import firebase from \"firebase/app\";\n//import axios from \"axios\";\nexport default {\n  name: \"login\",\n  components: {},\n  data() {\n    return {\n      username: [{\n        displayname: \"\",\n        username: \"moretesting\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        profile: \"\"\n      }]\n    };\n  },\n  created() {\n    /*\n    axios.get('https://api.twitter.com/1.1/users/show.json?user_id={dGcpjzT9XTZWdYw9EiciGwH0CiB3}')\n        .then(res => this.username = res.data)\n        .catch(err => console.log(err));\n        */\n    console.log(username + \"YES\");\n  },\n  methods: {\n    login: function (e) {\n      firebase.auth().signInWithEmailAndPassword(this.email, this.password).then(user => {\n        alert(`You are logged in as ${user.email}`);\n        this.$router.go({\n          path: this.$router.path\n        });\n      }, err => {\n        alert(err.message);\n      });\n      e.preventDefault();\n    },\n    googleLogin() {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithRedirect(provider).then(result => {\n        this.$router.go({\n          path: this.$router.path\n        });\n      }).catch(err => {\n        alert(\"Oops. \" + err.message);\n      });\n    },\n    twitterLogin() {\n      firebase.auth().signInWithRedirect(new firebase.auth.TwitterAuthProvider()).then(function (userCredential) {\n        // All additional user info is available here.\n\n        //console.log(username);\n\n        console.log(userCredential.additionalUserInfo.profile.screen_name);\n        console.log(userCredential.additionalUserInfo.profile.screen_name);\n        const test = userCredential.additionalUserInfo.profile.screen_name;\n        console.log(username);\n        //console.log(this.username);\n        this.$router.go({\n          path: this.$router.path\n        });\n      }).catch(function (error) {\n        // Error occurred.\n      });\n\n      /*\n            var provider = new firebase.auth.TwitterAuthProvider();\n             firebase.auth().signInWithRedirect(provider).then((result) => {\n                this.$router.go({path: this.$router.path});\n            }).catch((err) => {\n                alert('Oops. ' + err.message)\n            });\n            */\n\n      /*\n            firebase.auth().signInWithPopup(new firebase.auth.TwitterAuthProvider())\n      .then(function(userCredential) {\n      // All additional user info is available here.\n      console.log(userCredential.additionalUserInfo.profile);\n      })\n      .catch(function(error) {\n      // Error occurred.\n      });\n      */\n    }\n  },\n\n  mounted() {\n    gapi.signin2.render(\"my-signin2\", {\n      // this is the button \"id\"\n      onsuccess: this.onSignIn,\n      // note, no \"()\" here\n      scope: \"email\",\n      width: 400,\n      height: 50,\n      longtitle: true,\n      theme: \"light\",\n      redirect_uri: 'https://gseek27.github.io'\n    });\n  }\n};","map":{"version":3,"names":["firebase","name","components","data","username","displayname","email","password","profile","created","console","log","methods","login","e","auth","signInWithEmailAndPassword","then","user","alert","$router","go","path","err","message","preventDefault","googleLogin","provider","GoogleAuthProvider","signInWithRedirect","result","catch","twitterLogin","TwitterAuthProvider","userCredential","additionalUserInfo","screen_name","test","error","mounted","gapi","signin2","render","onsuccess","onSignIn","scope","width","height","longtitle","theme","redirect_uri"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Login.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col s12 m8 offset-m2\">\n          <div class=\"login card-panel teal white-text center\">\n            <h3>Login</h3>\n            <form>\n              <div class=\"input-field\">\n                <i class=\"material-icons prefix\">email</i>\n                <input type=\"text\" id=\"email\"  />\n                <label class=\"white-text\" for=\"email\">Email</label>\n              </div>\n              <div class=\"input-field\">\n                <i class=\"material-icons prefix\">lock</i>\n                <input\n                 type=\"password\" id=\"password\"  />\n                <label class=\"white-text\" for=\"password\">Password</label>\n              </div>\n              <button v-on:click=\"login\" class=\"btn btn-large grey lighten-4 black-text\">Login</button>\n              <!--<div id=\"my-signin2\" data-onsuccess=\"onSignIn\" data-theme=\"dark\"></div>-->\n            </form>\n          </div>\n          <div  @click=\"googleLogin\">\n            <img class=\"googlelogo\" alt=\"google logo\" src=\"../assets/googlebtn4.png\" />\n          </div>\n          <!-- id=\"my-signin2\"\n            \n            <div id=\"my-signin2\" @click=\"phoneLogin\"><img class=\"logo\" alt=\"google logo\" src=\"../assets/googlebtn4.png\"></div>\n                    <div id=\"my-signin2\" @click=\"facebookLogin\"><img class=\"logo\" alt=\"google logo\" src=\"../assets/googlebtn4.png\"></div>  \n          //src=\"../assets/googlebtn4.png-->\n          <br />\n          <div  @click=\"twitterLogin\">\n            <img class=\"twitterlogo\" alt=\"google logo\" src=\"../assets/twitterbtn.png\" />\n          </div>\n          <!--<div id=\"my-signin2\" @click=\"githubLogin\"><img class=\"logo\" alt=\"google logo\" src=\"../assets/googlebtn4.png\"></div>\n                    <div id=\"my-signin2\" @click=\"yahooLogin\"><img class=\"logo\" alt=\"google logo\" src=\"../assets/googlebtn4.png\"></div>\n          <div id=\"my-signin2\" @click=\"msoftLogin\"><img class=\"logo\" alt=\"google logo\" src=\"../assets/googlebtn4.png\"></div>-->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport firebase from \"firebase/app\";\n//import axios from \"axios\";\nexport default {\n  name: \"login\",\n  components: {},\n  data() {\n    return {\n      username: [\n        {\n          displayname: \"\",\n          username: \"moretesting\",\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          profile: \"\"\n        }\n      ]\n    };\n  },\n  created() {\n    /*\n    axios.get('https://api.twitter.com/1.1/users/show.json?user_id={dGcpjzT9XTZWdYw9EiciGwH0CiB3}')\n        .then(res => this.username = res.data)\n        .catch(err => console.log(err));\n        */\n    console.log(username + \"YES\");\n  },\n\n  methods: {\n    login: function(e) {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.email, this.password)\n        .then(\n          user => {\n            alert(`You are logged in as ${user.email}`);\n            this.$router.go({ path: this.$router.path });\n          },\n          err => {\n            alert(err.message);\n          }\n        );\n      e.preventDefault();\n    },\n    googleLogin() {\n      const provider = new firebase.auth.GoogleAuthProvider();\n\n      firebase\n        .auth()\n        .signInWithRedirect(provider)\n        .then(result => {\n          this.$router.go({ path: this.$router.path });\n        })\n        .catch(err => {\n          alert(\"Oops. \" + err.message);\n        });\n    },\n    twitterLogin() {\n      firebase\n        .auth()\n        .signInWithRedirect(new firebase.auth.TwitterAuthProvider())\n        .then(function(userCredential) {\n          // All additional user info is available here.\n\n          //console.log(username);\n\n          console.log(userCredential.additionalUserInfo.profile.screen_name);\n          console.log(userCredential.additionalUserInfo.profile.screen_name);\n          const test = userCredential.additionalUserInfo.profile.screen_name;\n          console.log(username);\n          //console.log(this.username);\n          this.$router.go({ path: this.$router.path });\n        })\n        .catch(function(error) {\n          // Error occurred.\n        });\n\n      /*\n            var provider = new firebase.auth.TwitterAuthProvider();\n\n            firebase.auth().signInWithRedirect(provider).then((result) => {\n                this.$router.go({path: this.$router.path});\n            }).catch((err) => {\n                alert('Oops. ' + err.message)\n            });\n            */\n\n      /*\n            firebase.auth().signInWithPopup(new firebase.auth.TwitterAuthProvider())\n  .then(function(userCredential) {\n    // All additional user info is available here.\n    console.log(userCredential.additionalUserInfo.profile);\n  })\n  .catch(function(error) {\n    // Error occurred.\n  });\n  */\n    }\n  },\n\n  mounted() {\n\n    \n    gapi.signin2.render(\"my-signin2\", {\n      // this is the button \"id\"\n      onsuccess: this.onSignIn, // note, no \"()\" here\n      scope: \"email\",\n      width: 400,\n      height: 50,\n      longtitle: true,\n      theme: \"light\",\n      redirect_uri: 'https://gseek27.github.io'\n    });\n  }\n};\n</script>\n\n<style scoped>\n.googlelogo {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 60%;\n}\n.twitterlogo {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 54%;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}