{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-342820ca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Textarea for posting content \"), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.tweetContent = $event),\n    placeholder: \"What's happening?\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.tweetContent]]), _createCommentVNode(\" Icon for media selection \"), _createElementVNode(\"label\", null, [_createElementVNode(\"i\", {\n    class: \"fa fa-picture-o\",\n    onMouseover: _cache[1] || (_cache[1] = (...args) => $setup.showHoverText && $setup.showHoverText(...args)),\n    onMouseout: _cache[2] || (_cache[2] = (...args) => $setup.hideHoverText && $setup.hideHoverText(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), $setup.hoverTextVisible ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, \"Media\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[3] || (_cache[3] = (...args) => $setup.previewMedia && $setup.previewMedia(...args)),\n    ref: \"mediaInput\",\n    accept: \"image/*,video/*,.gif\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */)]), _createCommentVNode(\" Image preview \"), $setup.mediaType === 'image' ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $setup.tweetImage,\n    alt: \"Selected Media\"\n  }, null, 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Video/GIF preview \"), $setup.mediaType === 'video' || $setup.mediaType === 'gif' ? (_openBlock(), _createElementBlock(\"video\", {\n    key: 1,\n    controls: \"\",\n    src: $setup.tweetImage\n  }, null, 8 /* PROPS */, _hoisted_3)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.uploadPost && $setup.uploadPost(...args))\n  }, \"Post\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_createElementVNode","$setup","tweetContent","$event","placeholder","class","onMouseover","_cache","args","showHoverText","onMouseout","hideHoverText","hoverTextVisible","_hoisted_1","type","onChange","previewMedia","ref","accept","style","mediaType","src","tweetImage","alt","controls","onClick","uploadPost"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/TweetBox.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Textarea for posting content -->\n    <textarea v-model=\"tweetContent\" placeholder=\"What's happening?\"></textarea>\n    \n    <!-- Icon for media selection -->\n    <label>\n      <i class=\"fa fa-picture-o\" @mouseover=\"showHoverText\" @mouseout=\"hideHoverText\"></i>\n      <span v-if=\"hoverTextVisible\">Media</span>\n      <input type=\"file\" @change=\"previewMedia\" ref=\"mediaInput\" accept=\"image/*,video/*,.gif\" style=\"display: none;\" />\n    </label>\n\n    <!-- Image preview -->\n    <img v-if=\"mediaType === 'image'\" :src=\"tweetImage\" alt=\"Selected Media\" />\n\n    <!-- Video/GIF preview -->\n    <video v-if=\"mediaType === 'video' || mediaType === 'gif'\" controls :src=\"tweetImage\"></video>\n\n    <button @click=\"uploadPost\">Post</button>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { storage } from \"@/firebase\"; // assuming you've initialized firebase somewhere\n\nexport default {\n  name: \"TweetBox\",\n  setup() {\n    const mediaInput = ref(null);\n    const tweetImage = ref(null);\n    const mediaType = ref(null);\n    const hoverTextVisible = ref(false);\n    const tweetContent = ref(\"\");\n\n    const showHoverText = () => hoverTextVisible.value = true;\n    const hideHoverText = () => hoverTextVisible.value = false;\n\n    const previewMedia = (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        if (file.type.startsWith(\"image\")) {\n          mediaType.value = \"image\";\n        } else if (file.type.startsWith(\"video\")) {\n          mediaType.value = \"video\";\n        } else if (file.name.endsWith(\".gif\")) {\n          mediaType.value = \"gif\";\n        }\n        tweetImage.value = URL.createObjectURL(file);\n      }\n    };\n\n    const uploadPost = async () => {\n      if (!tweetContent.value && !mediaInput.value.files[0]) {\n        alert(\"Please add some content or media before posting!\");\n        return;\n      }\n\n      // If there's media to be uploaded\n      const file = mediaInput.value.files[0];\n      if (file) {\n        const storageRef = storage.ref();\n        const mediaRef = storageRef.child(`media/${file.name}`);\n\n        try {\n          await mediaRef.put(file);\n          alert(\"Media uploaded successfully\");\n          // If you need the URL of the uploaded media\n          // const uploadedURL = await mediaRef.getDownloadURL();\n        } catch (error) {\n          console.error(\"Error uploading media:\", error);\n          alert(\"Failed to upload media\");\n        }\n      }\n\n      // Resetting for the next post\n      tweetContent.value = \"\";\n      tweetImage.value = null;\n      mediaType.value = null;\n    };\n\n    return {\n      mediaInput,\n      tweetImage,\n      mediaType,\n      hoverTextVisible,\n      tweetContent,\n      showHoverText,\n      hideHoverText,\n      previewMedia,\n      uploadPost\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* You might need to style the textarea, icon, hover text, and other elements */\n</style>\n"],"mappings":";;;;;;;;uBACEA,mBAAA,CAkBM,cAjBJC,mBAAA,kCAAqC,E,gBACrCC,mBAAA,CAA4E;+DAAzDC,MAAA,CAAAC,YAAY,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAA1BH,MAAA,CAAAC,YAAY,E,GAE/BH,mBAAA,8BAAiC,EACjCC,mBAAA,CAIQ,gBAHNA,mBAAA,CAAoF;IAAjFK,KAAK,EAAC,iBAAiB;IAAEC,WAAS,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAQ,aAAA,IAAAR,MAAA,CAAAQ,aAAA,IAAAD,IAAA,CAAa;IAAGE,UAAQ,EAAAH,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAU,aAAA,IAAAV,MAAA,CAAAU,aAAA,IAAAH,IAAA,CAAa;qCAClEP,MAAA,CAAAW,gBAAgB,I,cAA5Bd,mBAAA,CAA0C,QAAAe,UAAA,EAAZ,OAAK,K,mCACnCb,mBAAA,CAAkH;IAA3Gc,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAR,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAe,YAAA,IAAAf,MAAA,CAAAe,YAAA,IAAAR,IAAA,CAAY;IAAES,GAAG,EAAC,YAAY;IAACC,MAAM,EAAC,sBAAsB;IAACC,KAAsB,EAAtB;MAAA;IAAA;oDAG3FpB,mBAAA,mBAAsB,EACXE,MAAA,CAAAmB,SAAS,gB,cAApBtB,mBAAA,CAA2E;;IAAxCuB,GAAG,EAAEpB,MAAA,CAAAqB,UAAU;IAAEC,GAAG,EAAC;4EAExDxB,mBAAA,uBAA0B,EACbE,MAAA,CAAAmB,SAAS,gBAAgBnB,MAAA,CAAAmB,SAAS,c,cAA/CtB,mBAAA,CAA8F;;IAAnC0B,QAAQ,EAAR,EAAQ;IAAEH,GAAG,EAAEpB,MAAA,CAAAqB;4EAE1EtB,mBAAA,CAAyC;IAAhCyB,OAAK,EAAAlB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAyB,UAAA,IAAAzB,MAAA,CAAAyB,UAAA,IAAAlB,IAAA,CAAU;KAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}