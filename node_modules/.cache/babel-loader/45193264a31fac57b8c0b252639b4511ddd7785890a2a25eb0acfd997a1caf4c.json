{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bf1681ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Your profile page\", -1 /* HOISTED */));\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache) {\n  const _component_SideBar = _resolveComponent(\"SideBar\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_TweetsList = _resolveComponent(\"TweetsList\");\n  const _component_TrendingPosts = _resolveComponent(\"TrendingPosts\");\n  const _component_WhoToFollow = _resolveComponent(\"WhoToFollow\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_row, null, {\n    default: _withCtx(() => [_createVNode(_component_v_col, {\n      cols: \"3\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_SideBar)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_col, {\n      cols: \"6\"\n    }, {\n      default: _withCtx(() => [_hoisted_1, _createCommentVNode(\" Profile Picture \"), _ctx.profileImage ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: _ctx.profileImage,\n        alt: \"Profile\",\n        width: \"100\"\n      }, null, 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"input\", {\n        type: \"file\",\n        onChange: _cache[0] || (_cache[0] = (...args) => _ctx.uploadImage && _ctx.uploadImage(...args))\n      }, null, 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" Username \"), _createElementVNode(\"p\", null, \"@\" + _toDisplayString(_ctx.username), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.username = $event),\n        placeholder: \"Choose a username\"\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.username]]), _createCommentVNode(\" Submit Button \"), _createElementVNode(\"button\", {\n        onClick: _cache[2] || (_cache[2] = (...args) => _ctx.updateProfile && _ctx.updateProfile(...args))\n      }, \"Update Profile\"), _createVNode(_component_TweetsList, {\n        tweets: _ctx.tweets,\n        onRemoveTweet: _ctx.removeTweet\n      }, null, 8 /* PROPS */, [\"tweets\", \"onRemoveTweet\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_col, {\n      cols: \"3\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_TrendingPosts, {\n        topics: _ctx.trendingTopics,\n        class: \"sideB\"\n      }, null, 8 /* PROPS */, [\"topics\"]), _createVNode(_component_WhoToFollow, {\n        users: _ctx.usersToFollow,\n        class: \"sideB\"\n      }, null, 8 /* PROPS */, [\"users\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_v_row","_component_v_col","cols","_component_SideBar","_hoisted_1","_createCommentVNode","_ctx","profileImage","src","alt","width","type","onChange","_cache","args","uploadImage","_toDisplayString","username","$event","placeholder","onClick","updateProfile","_component_TweetsList","tweets","onRemoveTweet","removeTweet","_component_TrendingPosts","topics","trendingTopics","class","_component_WhoToFollow","users","usersToFollow"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Profile.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row>\n      <v-col cols=\"3\">\n        <SideBar />\n      </v-col>\n      <v-col cols=\"6\">\n        <h1>Your profile page</h1>\n\n        <!-- Profile Picture -->\n        <img :src=\"profileImage\" alt=\"Profile\" width=\"100\" v-if=\"profileImage\"/>\n        <input type=\"file\" @change=\"uploadImage\" />\n\n        <!-- Username -->\n        <p>@{{ username }}</p>\n        <input v-model=\"username\" placeholder=\"Choose a username\" />\n\n        <!-- Submit Button -->\n        <button @click=\"updateProfile\">Update Profile</button>\n\n        <TweetsList :tweets=\"tweets\" @removeTweet=\"removeTweet\" />\n      </v-col>\n\n      <v-col cols=\"3\">\n        <TrendingPosts :topics=\"trendingTopics\" class=\"sideB\" />\n        <WhoToFollow :users=\"usersToFollow\" class=\"sideB\" />\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport SideBar from './SideBar.vue';\nimport TrendingPosts from './TrendingPosts.vue';\nimport WhoToFollow from './WhoToFollow.vue';\nimport TweetsList from './TweetsList.vue';\nimport { getFirestore, collection, getDocs, orderBy, query } from 'firebase/firestore';\nimport { getFirestore, collection, doc, setDoc } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\n\nexport default {\n  name: 'ProfilePage',\n  components: {\n    SideBar,\n    TrendingPosts,\n    WhoToFollow,\n    TweetsList\n  },\n  data: () => ({\n    tweets: [],\n    trendingTopics: [\n      { title: \"MLB\", subtitle: \"2 hours ago\" },\n      { title: \"Anthony Davis\", subtitle: \"1,032 posts\" }\n    ],\n    usersToFollow: [\n      { name: \"AmazingAyo\" }\n    ],\n    username: '', // new data property for username\n    profileImage: '' // new data property for profile image link\n  }),\n  methods: {\n    removeTweet(tweetId) {\n      this.tweets = this.tweets.filter(tweet => tweet.id !== tweetId);\n    },\n    async fetchTweets() {\n      const db = getFirestore();\n      const tweetsCollection = collection(db, 'tweets');\n      const tweetsQuery = query(tweetsCollection, orderBy('timestamp', 'desc')); \n      const tweetDocs = await getDocs(tweetsQuery);\n\n      this.tweets = tweetDocs.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        };\n      });\n      console.log(\"Fetched tweets in parent:\", this.tweets);\n    },\n    uploadImage(event) {\n    const file = event.target.files[0];\n    if (file) {\n        this.profileImage = file; // store the file in the data property\n    }\n},\n    updateProfile() {\n      // Handle logic to update username and upload image to Firebase Storage\n      // or another cloud storage, then save the link in profileImage data property.\n    },\n     async uploadImageToStorage(file) {\n        const storage = getStorage();\n        const storageRef = ref(storage, 'profileImages/' + file.name); // create a reference in Firebase storage\n        await uploadBytes(storageRef, file); // upload the file to the reference\n        return await getDownloadURL(storageRef); // get the download URL\n    },\n\n    async updateProfile() {\n        if (this.profileImage && typeof this.profileImage !== 'string') {\n            const imageUrl = await this.uploadImageToStorage(this.profileImage);\n            this.profileImage = imageUrl; // set profileImage data property to the image link\n        }\n\n        const db = getFirestore();\n        const userDocRef = doc(collection(db, \"users\"), \"yourUserId\"); // replace 'yourUserId' with the id of the currently logged in user or a dynamic value\n\n        await setDoc(userDocRef, {\n            username: this.username,\n            profileImage: this.profileImage\n        }, { merge: true }); // this will merge the new data with existing, or create a new doc if doesn't exist\n    }\n  },\n  mounted() {\n    this.fetchTweets();\n  }\n}\n</script>\n\n<style scoped>\n.sideB {\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  padding: 0px 10px;\n  margin-top: 0px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":";;gEAOQA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;;;;;;uBAN3BC,mBAAA,CA2BM,cA1BJC,YAAA,CAyBQC,gBAAA;sBAxBN,MAEQ,CAFRD,YAAA,CAEQE,gBAAA;MAFDC,IAAI,EAAC;IAAG;wBACb,MAAW,CAAXH,YAAA,CAAWI,kBAAA,E;;QAEbJ,YAAA,CAeQE,gBAAA;MAfDC,IAAI,EAAC;IAAG;wBACb,MAA0B,CAA1BE,UAA0B,EAE1BC,mBAAA,qBAAwB,EACiCC,IAAA,CAAAC,YAAY,I,cAArET,mBAAA,CAAwE;;QAAlEU,GAAG,EAAEF,IAAA,CAAAC,YAAY;QAAEE,GAAG,EAAC,SAAS;QAACC,KAAK,EAAC;gFAC7Cb,mBAAA,CAA2C;QAApCc,IAAI,EAAC,MAAM;QAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,IAAA,CAAAS,WAAA,IAAAT,IAAA,CAAAS,WAAA,IAAAD,IAAA,CAAW;yCAEvCT,mBAAA,cAAiB,EACjBR,mBAAA,CAAsB,WAAnB,GAAC,GAAAmB,gBAAA,CAAGV,IAAA,CAAAW,QAAQ,kB,gBACfpB,mBAAA,CAA4D;mEAA5CS,IAAA,CAAAW,QAAQ,GAAAC,MAAA;QAAEC,WAAW,EAAC;qDAAtBb,IAAA,CAAAW,QAAQ,E,GAExBZ,mBAAA,mBAAsB,EACtBR,mBAAA,CAAsD;QAA7CuB,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,IAAA,CAAAe,aAAA,IAAAf,IAAA,CAAAe,aAAA,IAAAP,IAAA,CAAa;SAAE,gBAAc,GAE7Cf,YAAA,CAA0DuB,qBAAA;QAA7CC,MAAM,EAAEjB,IAAA,CAAAiB,MAAM;QAAGC,aAAW,EAAElB,IAAA,CAAAmB;;;QAG7C1B,YAAA,CAGQE,gBAAA;MAHDC,IAAI,EAAC;IAAG;wBACb,MAAwD,CAAxDH,YAAA,CAAwD2B,wBAAA;QAAxCC,MAAM,EAAErB,IAAA,CAAAsB,cAAc;QAAEC,KAAK,EAAC;2CAC9C9B,YAAA,CAAoD+B,sBAAA;QAAtCC,KAAK,EAAEzB,IAAA,CAAA0B,aAAa;QAAEH,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}