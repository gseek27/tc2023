{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_v_row, null, {\n    default: _withCtx(() => [_createCommentVNode(\" This column will take the majority of the space \"), _createVNode(_component_v_col, {\n      cols: \"12\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_textarea, {\n        modelValue: _ctx.tweetContent,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.tweetContent = $event),\n        placeholder: \"What is happening?!\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_v_row, null, {\n    default: _withCtx(() => [_createVNode(_component_v_col, {\n      cols: \"10\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" Upload icon triggering the file input \"), _createElementVNode(\"label\", null, [_createVNode(_component_v_icon, null, {\n        default: _withCtx(() => [_createTextVNode(\"mdi-image\")]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"input\", {\n        type: \"file\",\n        onChange: _cache[1] || (_cache[1] = (...args) => _ctx.onFileChange && _ctx.onFileChange(...args)),\n        style: {\n          \"display\": \"none\"\n        }\n      }, null, 32 /* HYDRATE_EVENTS */)])]),\n\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" This column will be for the Post button \"), _createVNode(_component_v_col, {\n      cols: \"1\",\n      class: \"text-end\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_btn, {\n        onClick: _ctx.postTweet\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Post\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_v_row","_createCommentVNode","_component_v_col","cols","_component_v_textarea","_ctx","tweetContent","$event","placeholder","_createElementVNode","_component_v_icon","type","onChange","_cache","args","onFileChange","style","class","_component_v_btn","onClick","postTweet"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/TweetBox.vue"],"sourcesContent":["<template>\n<v-row>\n    <!-- This column will take the majority of the space -->\n    <v-col cols=\"12\">\n      <v-textarea v-model=\"tweetContent\" placeholder=\"What is happening?!\"></v-textarea>\n       </v-col>\n       </v-row>\n   \n       <v-row>\n       <v-col cols=\"10\">\n      <!-- Upload icon triggering the file input -->\n      <label>\n        <v-icon>mdi-image</v-icon>\n        <input type=\"file\" @change=\"onFileChange\" style=\"display: none;\">\n      </label>\n    </v-col>\n    \n    <!-- This column will be for the Post button -->\n    <v-col cols=\"1\" class=\"text-end\">\n      <v-btn @click=\"postTweet\">Post</v-btn>\n    </v-col>\n  </v-row>\n</template>\n\n\n<script>\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from \"/src/firebase/index.js\"; \nimport { auth } from \"/src/firebase/index.js\";\n\n\n\nexport default {\n  data() {\n    return {\n      tweetContent: \"\",\n      tweetImage: null,\n    };\n  },\n  methods: { \n    async postTweet() {\n      try {\n        const user = auth.currentUser;\n        if (!user) throw new Error(\"User not authenticated\");\n\n        let imageUrl = null;\n        if (this.tweetImage) {\n          const storage = getStorage();\n          const imageRef = storageRef(storage, 'tweets/' + this.tweetImage.name);\n          await uploadBytes(imageRef, this.tweetImage);\n          imageUrl = await getDownloadURL(imageRef);\n        }\n        \n        await this.createTweet(this.tweetContent, user, imageUrl);\n        this.tweetContent = \"\"; // clear the textarea after posting\n        this.tweetImage = null;\n        this.$emit('tweetPosted');\n        this.fetchTweets(); \n      } catch (error) {\n        console.error(\"Error posting tweet:\", error);\n      }\n    },\n    onFileChange(e) {\n      const file = e.target.files[0];\n      if (file) {\n        this.tweetImage = file;\n      }\n    },\n  async function createTweet(content, user) {\n  const tweet = {\n    content: content,\n    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    userId: user.uid,\n    username: user.username || '',  // include the username from the user object\n  };\n\n  // Only add profileImage to tweet if it's defined\n  if (user.profileImage) {\n    tweet.profileImage = user.profileImage;\n  }\n\n  const db = getFirestore();\n  const tweetsCollection = collection(db, \"tweets\");\n  await addDoc(tweetsCollection, tweet);\n}\n\n  }\n};\n</script>"],"mappings":";;;;;;;6DACAA,YAAA,CAKeC,gBAAA;sBAJX,MAAwD,CAAxDC,mBAAA,qDAAwD,EACxDF,YAAA,CAEWG,gBAAA;MAFJC,IAAI,EAAC;IAAI;wBACd,MAAkF,CAAlFJ,YAAA,CAAkFK,qBAAA;oBAA7DC,IAAA,CAAAC,YAAY;mEAAZD,IAAA,CAAAC,YAAY,GAAAC,MAAA;QAAEC,WAAW,EAAC;;;;;;MAI9CT,YAAA,CAaGC,gBAAA;sBAZH,MAMK,CANLD,YAAA,CAMKG,gBAAA;MANEC,IAAI,EAAC;IAAI;wBACjB,MAA8C,CAA9CF,mBAAA,2CAA8C,EAC9CQ,mBAAA,CAGQ,gBAFNV,YAAA,CAA0BW,iBAAA;0BAAlB,MAAS,C,iBAAT,WAAS,E;;UACjBD,mBAAA,CAAiE;QAA1DE,IAAI,EAAC,MAAM;QAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,IAAA,CAAAU,YAAA,IAAAV,IAAA,CAAAU,YAAA,IAAAD,IAAA,CAAY;QAAEE,KAAsB,EAAtB;UAAA;QAAA;;;;QAI9Cf,mBAAA,6CAAgD,EAChDF,YAAA,CAEQG,gBAAA;MAFDC,IAAI,EAAC,GAAG;MAACc,KAAK,EAAC;;wBACpB,MAAsC,CAAtClB,YAAA,CAAsCmB,gBAAA;QAA9BC,OAAK,EAAEd,IAAA,CAAAe;MAAS;0BAAE,MAAI,C,iBAAJ,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}