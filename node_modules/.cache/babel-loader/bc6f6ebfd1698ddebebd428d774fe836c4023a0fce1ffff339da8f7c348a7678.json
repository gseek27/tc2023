{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TweetPost = _resolveComponent(\"TweetPost\");\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedTweets, tweet => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: tweet.id\n    }, [tweet.content ? (_openBlock(), _createBlock(_component_TweetPost, {\n      key: 0,\n      tweetData: tweet,\n      userId: tweet.userId,\n      onTweetDeleted: $options.handleTweetDeleted\n    }, null, 8 /* PROPS */, [\"tweetData\", \"userId\", \"onTweetDeleted\"])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","sortedTweets","tweet","key","id","content","_createBlock","_component_TweetPost","tweetData","userId","onTweetDeleted","$options","handleTweetDeleted"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/TweetsList.vue"],"sourcesContent":["<template>\n  <div>\n     <div v-for=\"tweet in sortedTweets\" :key=\"tweet.id\">\n      <TweetPost v-if=\"tweet.content\" :tweetData=\"tweet\" :userId=\"tweet.userId\" @tweetDeleted=\"handleTweetDeleted\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed } from 'vue';\nimport TweetPost from './TweetPost.vue';\n\nexport default {\n  name: 'TweetsList',\n  components: {\n    TweetPost\n  },\n  props: {\n    tweets: {\n      type: Array,\n      required: true,\n      default: () => []\n    }\n  },\n  setup(props) {\n        console.log(\"Tweets prop in TweetsList:\", props.tweets);\n    const sortedTweets = computed(() => {\n      return [...props.tweets].sort((a, b) => b.timestamp - a.timestamp);\n    });\n\n    return {\n      sortedTweets\n    };\n  },\n  methods: {\n    handleTweetDeleted(tweetId) {\n      // Emitting an event so parent component can handle it\n      this.$emit('removeTweet', tweetId);\n    }\n  }\n};\n</script>\n"],"mappings":";;;uBACEA,mBAAA,CAIM,e,kBAHHA,mBAAA,CAEKC,SAAA,QAAAC,WAAA,CAFgBC,MAAA,CAAAC,YAAY,EAArBC,KAAK;yBAAjBL,mBAAA,CAEK;MAF+BM,GAAG,EAAED,KAAK,CAACE;QAC7BF,KAAK,CAACG,OAAO,I,cAA9BC,YAAA,CAA+GC,oBAAA;;MAA9EC,SAAS,EAAEN,KAAK;MAAGO,MAAM,EAAEP,KAAK,CAACO,MAAM;MAAGC,cAAY,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}