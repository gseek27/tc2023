{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bf1681ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Your profile page\", -1 /* HOISTED */));\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_SideBar = _resolveComponent(\"SideBar\");\n  const _component_TweetsList = _resolveComponent(\"TweetsList\");\n  const _component_TrendingPosts = _resolveComponent(\"TrendingPosts\");\n  const _component_WhoToFollow = _resolveComponent(\"WhoToFollow\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_ctx.loading ? (_openBlock(), _createBlock(_component_v_row, {\n    key: 0\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_col, {\n      class: \"text-center\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" Loading... \")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Your existing content wrapped in a v-else \"), _createVNode(_component_v_row, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"3\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_SideBar)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"6\"\n      }, {\n        default: _withCtx(() => [_hoisted_1, _createCommentVNode(\" Profile Picture \"), _ctx.profileImage ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          src: _ctx.profileImage,\n          alt: \"Profile\",\n          width: \"100\"\n        }, null, 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[0] || (_cache[0] = (...args) => $options.uploadImage && $options.uploadImage(...args))\n        }, null, 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" Username \"), _createElementVNode(\"p\", null, \"@\" + _toDisplayString(_ctx.username), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.tempUsername = $event),\n          placeholder: \"Choose a username\"\n        }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.tempUsername]]), _createCommentVNode(\" Submit Button \"), _createElementVNode(\"button\", {\n          onClick: _cache[2] || (_cache[2] = (...args) => $options.updateProfile && $options.updateProfile(...args))\n        }, \"Update Profile\"), _createVNode(_component_TweetsList, {\n          tweets: _ctx.tweets,\n          onRemoveTweet: $options.removeTweet\n        }, null, 8 /* PROPS */, [\"tweets\", \"onRemoveTweet\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"3\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_TrendingPosts, {\n          topics: _ctx.trendingTopics,\n          class: \"sideB\"\n        }, null, 8 /* PROPS */, [\"topics\"]), _createVNode(_component_WhoToFollow, {\n          users: _ctx.usersToFollow,\n          class: \"sideB\"\n        }, null, 8 /* PROPS */, [\"users\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_ctx","loading","_createBlock","_component_v_row","key","_createVNode","_component_v_col","class","_Fragment","_createCommentVNode","cols","_component_SideBar","_hoisted_1","profileImage","src","alt","width","type","onChange","_cache","args","$options","uploadImage","_toDisplayString","username","tempUsername","$event","placeholder","onClick","updateProfile","_component_TweetsList","tweets","onRemoveTweet","removeTweet","_component_TrendingPosts","topics","trendingTopics","_component_WhoToFollow","users","usersToFollow"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Profile.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row v-if=\"loading\">\n      <v-col class=\"text-center\">\n        Loading...\n      </v-col>\n    </v-row>\n\n    <!-- Your existing content wrapped in a v-else -->\n    <v-row v-else>\n      <v-row>\n        <v-col cols=\"3\">\n          <SideBar />\n        </v-col>\n        <v-col cols=\"6\">\n          <h1>Your profile page</h1>\n\n          <!-- Profile Picture -->\n          <img :src=\"profileImage\" alt=\"Profile\" width=\"100\" v-if=\"profileImage\" />\n          <input type=\"file\" @change=\"uploadImage\" />\n\n          <!-- Username -->\n          <p>@{{ username }}</p>\n          <input v-model=\"tempUsername\" placeholder=\"Choose a username\" />\n\n          <!-- Submit Button -->\n          <button @click=\"updateProfile\">Update Profile</button>\n\n          <TweetsList :tweets=\"tweets\" @removeTweet=\"removeTweet\" />\n        </v-col>\n\n        <v-col cols=\"3\">\n          <TrendingPosts :topics=\"trendingTopics\" class=\"sideB\" />\n          <WhoToFollow :users=\"usersToFollow\" class=\"sideB\" />\n        </v-col>\n      </v-row>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport SideBar from './SideBar.vue';\nimport TrendingPosts from './TrendingPosts.vue';\nimport WhoToFollow from './WhoToFollow.vue';\nimport TweetsList from './TweetsList.vue';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, getDocs, query, orderBy, where, doc, setDoc, getDoc } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\nexport default {\n  name: 'ProfilePage',\n  components: {\n    SideBar,\n    TrendingPosts,\n    WhoToFollow,\n    TweetsList\n  },\n  data: () => ({\n    tweets: [],\n    loading: true,\n    tempUsername: '',\n    userDocId: null,\n    trendingTopics: [\n      { title: \"MLB\", subtitle: \"2 hours ago\" },\n      { title: \"Anthony Davis\", subtitle: \"1,032 posts\" }\n    ],\n    usersToFollow: [\n      { name: \"AmazingAyo\" }\n    ],\n    username: '',\n    profileImage: ''\n  }),\n  methods: {\n  async fetchUserProfile() {\n      const db = getFirestore();\n\n      // Check if userDocId is available\n      if (!this.userDocId) {\n        console.error(\"User document ID is not available\");\n        return;\n      }\n\n      try {\n        const userDocRef = doc(db, \"users\", this.userDocId);\n        const userDoc = await getDoc(userDocRef);\n\n        if (userDoc.exists()) {\n          this.username = userDoc.data().username;\n          this.tempUsername = userDoc.data().username;\n          this.profileImage = userDoc.data().profileImage;\n        } else {\n          console.error(\"User document not found:\", this.userDocId);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user document:\", error);\n      }\n\n      // Set loading to false after fetching the profile (or realizing the profile doesn't exist)\n      this.loading = false;\n    },\n\n\n    removeTweet(tweetId) {\n      this.tweets = this.tweets.filter(tweet => tweet.id !== tweetId);\n    },\n\n    async fetchTweets() {\n      const db = getFirestore();\n      try {\n        const tweetsQuery = query(\n          collection(db, 'tweets'),\n          where('userId', '==', this.userDocId), // Filter by user document ID\n          orderBy('timestamp', 'desc')\n        );\n\n        const tweetDocs = await getDocs(tweetsQuery);\n        this.tweets = tweetDocs.docs.map(doc => {\n          return {\n            id: doc.id,\n            ...doc.data()\n          };\n        });\n\n        console.log(\"Fetched tweets in parent:\", this.tweets);\n      } catch (error) {\n        console.error(\"Error fetching tweets:\", error);\n      }\n    },\n\n    async uploadImage(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.profileImage = file; // store the file in the data property\n      }\n    },\n\n    async uploadImageToStorage(file) {\n      const storage = getStorage();\n      const storageRef = ref(storage, 'profileImages/' + file.name); // create a reference in Firebase storage\n      await uploadBytes(storageRef, file); // upload the file to the reference\n      return await getDownloadURL(storageRef); // get the download URL\n    },\n\n    async updateProfile() {\n      if (this.profileImage && typeof this.profileImage !== 'string') {\n        const imageUrl = await this.uploadImageToStorage(this.profileImage);\n        this.profileImage = imageUrl; // set profileImage data property to the image link\n      }\n\n      const db = getFirestore();\n      const userDocRef = doc(collection(db, \"users\"), this.userDocId); // Use the userDocId to update the correct user document\n\n      await setDoc(userDocRef, {\n        username: this.tempUsername,\n        profileImage: this.profileImage\n      }, { merge: true }); // this will merge the new data with existing, or create a new doc if doesn't exist\n      this.username = this.tempUsername; // Update the displayed username after saving to Firestore\n    }\n  },\n\n  mounted() {\n    this.fetchTweets();\n\n      const auth = getAuth();\n      onAuthStateChanged(auth, (user) => {\n        if (user) {\n          this.userDocId = user.uid; // Set the userDocId based on the user's UID\n          this.fetchUserProfile(); // Fetch the user profile\n        } else {\n          // User is not logged in\n          console.log(\"User is not authenticated\");\n          this.loading = false;\n        }\n    });\n  }\n};\n</script>\n\n<style scoped>\n.sideB {\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  padding: 0px 10px;\n  margin-top: 0px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":";;gEAeUA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;;;;;;uBAd7BC,mBAAA,CAoCM,cAnCSC,IAAA,CAAAC,OAAO,I,cAApBC,YAAA,CAIQC,gBAAA;IAAAC,GAAA;EAAA;sBAHN,MAEQ,CAFRC,YAAA,CAEQC,gBAAA;MAFDC,KAAK,EAAC;IAAa;wBAAC,MAE3B,C,iBAF2B,cAE3B,E;;;;;uBAIFR,mBAAA,CA2BQS,SAAA;IAAAJ,GAAA;EAAA,IA5BRK,mBAAA,+CAAkD,EAClDJ,YAAA,CA2BQF,gBAAA;sBA1BN,MAyBQ,CAzBRE,YAAA,CAyBQF,gBAAA;wBAxBN,MAEQ,CAFRE,YAAA,CAEQC,gBAAA;QAFDI,IAAI,EAAC;MAAG;0BACb,MAAW,CAAXL,YAAA,CAAWM,kBAAA,E;;UAEbN,YAAA,CAeQC,gBAAA;QAfDI,IAAI,EAAC;MAAG;0BACb,MAA0B,CAA1BE,UAA0B,EAE1BH,mBAAA,qBAAwB,EACiCT,IAAA,CAAAa,YAAY,I,cAArEd,mBAAA,CAAyE;;UAAnEe,GAAG,EAAEd,IAAA,CAAAa,YAAY;UAAEE,GAAG,EAAC,SAAS;UAACC,KAAK,EAAC;kFAC7ClB,mBAAA,CAA2C;UAApCmB,IAAI,EAAC,MAAM;UAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;2CAEvCX,mBAAA,cAAiB,EACjBX,mBAAA,CAAsB,WAAnB,GAAC,GAAAyB,gBAAA,CAAGvB,IAAA,CAAAwB,QAAQ,kB,gBACf1B,mBAAA,CAAgE;qEAAhDE,IAAA,CAAAyB,YAAY,GAAAC,MAAA;UAAEC,WAAW,EAAC;uDAA1B3B,IAAA,CAAAyB,YAAY,E,GAE5BhB,mBAAA,mBAAsB,EACtBX,mBAAA,CAAsD;UAA7C8B,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAQ,aAAA,IAAAR,QAAA,CAAAQ,aAAA,IAAAT,IAAA,CAAa;WAAE,gBAAc,GAE7Cf,YAAA,CAA0DyB,qBAAA;UAA7CC,MAAM,EAAE/B,IAAA,CAAA+B,MAAM;UAAGC,aAAW,EAAEX,QAAA,CAAAY;;;UAG7C5B,YAAA,CAGQC,gBAAA;QAHDI,IAAI,EAAC;MAAG;0BACb,MAAwD,CAAxDL,YAAA,CAAwD6B,wBAAA;UAAxCC,MAAM,EAAEnC,IAAA,CAAAoC,cAAc;UAAE7B,KAAK,EAAC;6CAC9CF,YAAA,CAAoDgC,sBAAA;UAAtCC,KAAK,EAAEtC,IAAA,CAAAuC,aAAa;UAAEhC,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}