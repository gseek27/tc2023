{"ast":null,"code":"import SideBar from './SideBar.vue';\nimport TrendingPosts from './TrendingPosts.vue';\nimport WhoToFollow from './WhoToFollow.vue';\nimport TweetsList from './TweetsList.vue';\nimport { getFirestore, collection, getDocs, orderBy, query } from 'firebase/firestore';\nexport default {\n  name: 'ProfilePage',\n  components: {\n    SideBar,\n    TrendingPosts,\n    WhoToFollow,\n    TweetsList\n  },\n  data: () => ({\n    tweets: [],\n    trendingTopics: [{\n      title: \"MLB\",\n      subtitle: \"2 hours ago\"\n    }, {\n      title: \"Anthony Davis\",\n      subtitle: \"1,032 posts\"\n    }],\n    usersToFollow: [{\n      name: \"AmazingAyo\"\n    }],\n    username: '',\n    // new data property for username\n    profileImage: '' // new data property for profile image link\n  }),\n\n  methods: {\n    removeTweet(tweetId) {\n      this.tweets = this.tweets.filter(tweet => tweet.id !== tweetId);\n    },\n    async fetchTweets() {\n      const db = getFirestore();\n      const tweetsCollection = collection(db, 'tweets');\n      const tweetsQuery = query(tweetsCollection, orderBy('timestamp', 'desc'));\n      const tweetDocs = await getDocs(tweetsQuery);\n      this.tweets = tweetDocs.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        };\n      });\n      console.log(\"Fetched tweets in parent:\", this.tweets);\n    },\n    uploadImage(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.profileImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    updateProfile() {\n      // Handle logic to update username and upload image to Firebase Storage\n      // or another cloud storage, then save the link in profileImage data property.\n    }\n  },\n  mounted() {\n    this.fetchTweets();\n  }\n};","map":{"version":3,"names":["SideBar","TrendingPosts","WhoToFollow","TweetsList","getFirestore","collection","getDocs","orderBy","query","name","components","data","tweets","trendingTopics","title","subtitle","usersToFollow","username","profileImage","methods","removeTweet","tweetId","filter","tweet","id","fetchTweets","db","tweetsCollection","tweetsQuery","tweetDocs","docs","map","doc","console","log","uploadImage","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","updateProfile","mounted"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Profile.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row>\n      <v-col cols=\"3\">\n        <SideBar />\n      </v-col>\n      <v-col cols=\"6\">\n        <h1>Your profile page</h1>\n\n        <!-- Profile Picture -->\n        <img :src=\"profileImage\" alt=\"Profile\" width=\"100\" v-if=\"profileImage\"/>\n        <input type=\"file\" @change=\"uploadImage\" />\n\n        <!-- Username -->\n        <p>@{{ username }}</p>\n        <input v-model=\"username\" placeholder=\"Choose a username\" />\n\n        <!-- Submit Button -->\n        <button @click=\"updateProfile\">Update Profile</button>\n\n        <TweetsList :tweets=\"tweets\" @removeTweet=\"removeTweet\" />\n      </v-col>\n\n      <v-col cols=\"3\">\n        <TrendingPosts :topics=\"trendingTopics\" class=\"sideB\" />\n        <WhoToFollow :users=\"usersToFollow\" class=\"sideB\" />\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport SideBar from './SideBar.vue';\nimport TrendingPosts from './TrendingPosts.vue';\nimport WhoToFollow from './WhoToFollow.vue';\nimport TweetsList from './TweetsList.vue';\nimport { getFirestore, collection, getDocs, orderBy, query } from 'firebase/firestore';\n\nexport default {\n  name: 'ProfilePage',\n  components: {\n    SideBar,\n    TrendingPosts,\n    WhoToFollow,\n    TweetsList\n  },\n  data: () => ({\n    tweets: [],\n    trendingTopics: [\n      { title: \"MLB\", subtitle: \"2 hours ago\" },\n      { title: \"Anthony Davis\", subtitle: \"1,032 posts\" }\n    ],\n    usersToFollow: [\n      { name: \"AmazingAyo\" }\n    ],\n    username: '', // new data property for username\n    profileImage: '' // new data property for profile image link\n  }),\n  methods: {\n    removeTweet(tweetId) {\n      this.tweets = this.tweets.filter(tweet => tweet.id !== tweetId);\n    },\n    async fetchTweets() {\n      const db = getFirestore();\n      const tweetsCollection = collection(db, 'tweets');\n      const tweetsQuery = query(tweetsCollection, orderBy('timestamp', 'desc')); \n      const tweetDocs = await getDocs(tweetsQuery);\n\n      this.tweets = tweetDocs.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        };\n      });\n      console.log(\"Fetched tweets in parent:\", this.tweets);\n    },\n    uploadImage(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.profileImage = e.target.result;\n        }\n        reader.readAsDataURL(file);\n      }\n    },\n    updateProfile() {\n      // Handle logic to update username and upload image to Firebase Storage\n      // or another cloud storage, then save the link in profileImage data property.\n    }\n  },\n  mounted() {\n    this.fetchTweets();\n  }\n}\n</script>\n\n<style scoped>\n.sideB {\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  padding: 0px 10px;\n  margin-top: 0px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"AAgCA,OAAOA,OAAM,MAAO,eAAe;AACnC,OAAOC,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,UAAS,MAAO,kBAAkB;AACzC,SAASC,YAAY,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAEC,KAAI,QAAS,oBAAoB;AAEtF,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVV,OAAO;IACPC,aAAa;IACbC,WAAW;IACXC;EACF,CAAC;EACDQ,IAAI,EAAEA,CAAA,MAAO;IACXC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,CACd;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAc,CAAC,EACzC;MAAED,KAAK,EAAE,eAAe;MAAEC,QAAQ,EAAE;IAAc,EACnD;IACDC,aAAa,EAAE,CACb;MAAEP,IAAI,EAAE;IAAa,EACtB;IACDQ,QAAQ,EAAE,EAAE;IAAE;IACdC,YAAY,EAAE,EAAC,CAAE;EACnB,CAAC,CAAC;;EACFC,OAAO,EAAE;IACPC,WAAWA,CAACC,OAAO,EAAE;MACnB,IAAI,CAACT,MAAK,GAAI,IAAI,CAACA,MAAM,CAACU,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,EAAC,KAAMH,OAAO,CAAC;IACjE,CAAC;IACD,MAAMI,WAAWA,CAAA,EAAG;MAClB,MAAMC,EAAC,GAAItB,YAAY,CAAC,CAAC;MACzB,MAAMuB,gBAAe,GAAItB,UAAU,CAACqB,EAAE,EAAE,QAAQ,CAAC;MACjD,MAAME,WAAU,GAAIpB,KAAK,CAACmB,gBAAgB,EAAEpB,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;MACzE,MAAMsB,SAAQ,GAAI,MAAMvB,OAAO,CAACsB,WAAW,CAAC;MAE5C,IAAI,CAAChB,MAAK,GAAIiB,SAAS,CAACC,IAAI,CAACC,GAAG,CAACC,GAAE,IAAK;QACtC,OAAO;UACLR,EAAE,EAAEQ,GAAG,CAACR,EAAE;UACV,GAAGQ,GAAG,CAACrB,IAAI,CAAC;QACd,CAAC;MACH,CAAC,CAAC;MACFsB,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAACtB,MAAM,CAAC;IACvD,CAAC;IACDuB,WAAWA,CAACC,KAAK,EAAE;MACjB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAKC,CAAC,IAAK;UACrB,IAAI,CAACzB,YAAW,GAAIyB,CAAC,CAACL,MAAM,CAACM,MAAM;QACrC;QACAJ,MAAM,CAACK,aAAa,CAACR,IAAI,CAAC;MAC5B;IACF,CAAC;IACDS,aAAaA,CAAA,EAAG;MACd;MACA;IAAA;EAEJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACtB,WAAW,CAAC,CAAC;EACpB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}