{"ast":null,"code":"import { createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _createCommentVNode(\" Your template code \");\n}","map":{"version":3,"names":["_createCommentVNode"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Profile.vue"],"sourcesContent":["<template>\n  <!-- Your template code -->\n</template>\n\n<script>\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport {\n  getFirestore,\n  collection,\n  doc,\n  getDoc,\n  query,\n  orderBy,\n  getDocs,\n} from 'firebase/firestore';\n\nexport default {\n  name: 'ProfilePage',\n  data() {\n    return {\n      tweets: [],\n      loading: true,\n      userID: null,\n      username: '',\n      profileImage: '',\n    };\n  },\n  methods: {\n    async fetchUserProfile(userId) {\n      const db = getFirestore();\n      const userDocRef = doc(db, 'users', userId); // Adjust the path as needed\n      return await getDoc(userDocRef);\n    },\n    async fetchTweets() {\n      const db = getFirestore();\n      const tweetsCollection = collection(db, 'tweets');\n      const tweetsQuery = query(\n        tweetsCollection,\n        orderBy('timestamp', 'desc')\n      );\n\n      const tweetDocs = await getDocs(tweetsQuery);\n      this.tweets = tweetDocs.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      console.log('Fetched tweets in parent:', this.tweets);\n    },\n  },\n  mounted() {\n    const auth = getAuth();\n    onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        this.userID = user.uid;\n        const userProfile = await this.fetchUserProfile(user.uid);\n\n        if (userProfile.exists()) {\n          this.username = userProfile.data().username || ''; // Handle undefined username\n          this.profileImage = userProfile.data().profileImage || ''; // Handle undefined profileImage\n        } else {\n          console.error('User profile does not exist:', user.uid);\n        }\n\n        this.fetchTweets();\n        this.loading = false;\n      } else {\n        this.loading = false;\n        console.log('User is not authenticated');\n      }\n    });\n  },\n};\n</script>\n\n<style scoped>\n/* Your scoped styles */\n</style>\n"],"mappings":";;SACEA,mBAAA,wBAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}