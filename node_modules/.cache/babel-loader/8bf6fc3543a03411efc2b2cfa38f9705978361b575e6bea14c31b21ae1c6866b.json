{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bf1681ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Your profile page\", -1 /* HOISTED */));\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_SideBar = _resolveComponent(\"SideBar\");\n  const _component_v_avatar = _resolveComponent(\"v-avatar\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_TweetsList = _resolveComponent(\"TweetsList\");\n  const _component_TrendingPosts = _resolveComponent(\"TrendingPosts\");\n  const _component_WhoToFollow = _resolveComponent(\"WhoToFollow\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.loading ? (_openBlock(), _createBlock(_component_v_row, {\n    key: 0\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_col, {\n      class: \"text-center\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" Loading... \")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Your existing content wrapped in a v-else \"), _createVNode(_component_v_row, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"3\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_SideBar)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"6\"\n      }, {\n        default: _withCtx(() => [_hoisted_1, _createCommentVNode(\" Profile Picture \"), $data.profileImage ? (_openBlock(), _createBlock(_component_v_avatar, {\n          key: 0\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"img\", {\n            src: $data.profileImage,\n            alt: \"Profile\",\n            width: \"100\"\n          }, null, 8 /* PROPS */, _hoisted_2)]),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"label\", null, [_createVNode(_component_v_icon, null, {\n          default: _withCtx(() => [_createTextVNode(\"mdi-image\")]),\n          _: 1 /* STABLE */\n        }), _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[0] || (_cache[0] = (...args) => _ctx.onFileChange && _ctx.onFileChange(...args)),\n          style: {\n            \"display\": \"none\"\n          }\n        }, null, 32 /* HYDRATE_EVENTS */)]), _createCommentVNode(\" Username \"), _createElementVNode(\"p\", null, \"@\" + _toDisplayString($data.username), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.tempUsername = $event),\n          placeholder: \"Choose a username\"\n        }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.tempUsername]]), _createCommentVNode(\" Submit Button \"), _createElementVNode(\"button\", {\n          onClick: _cache[2] || (_cache[2] = (...args) => $options.updateProfile && $options.updateProfile(...args))\n        }, \"Update Profile\"), (_openBlock(), _createBlock(_component_TweetsList, {\n          tweets: $data.tweets,\n          onRemoveTweet: _ctx.removeTweet,\n          key: _ctx.tweetsUpdateTime\n        }, null, 8 /* PROPS */, [\"tweets\", \"onRemoveTweet\"]))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"3\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_TrendingPosts, {\n          topics: $data.trendingTopics,\n          class: \"sideB\"\n        }, null, 8 /* PROPS */, [\"topics\"]), _createVNode(_component_WhoToFollow, {\n          users: $data.usersToFollow,\n          class: \"sideB\"\n        }, null, 8 /* PROPS */, [\"users\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","$data","loading","_createBlock","_component_v_row","key","_createVNode","_component_v_col","class","_Fragment","_createCommentVNode","cols","_component_SideBar","_hoisted_1","profileImage","_component_v_avatar","src","alt","width","_component_v_icon","type","onChange","_cache","args","_ctx","onFileChange","style","_toDisplayString","username","tempUsername","$event","placeholder","onClick","$options","updateProfile","_component_TweetsList","tweets","onRemoveTweet","removeTweet","tweetsUpdateTime","_component_TrendingPosts","topics","trendingTopics","_component_WhoToFollow","users","usersToFollow"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Profile.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row v-if=\"loading\">\n      <v-col class=\"text-center\">\n        Loading...\n      </v-col>\n    </v-row>\n\n    <!-- Your existing content wrapped in a v-else -->\n    <v-row v-else>\n      <v-row>\n        <v-col cols=\"3\">\n          <SideBar />\n        </v-col>\n        <v-col cols=\"6\">\n          <h1>Your profile page</h1>\n\n          <!-- Profile Picture -->\n           <v-avatar v-if=\"profileImage\">\n            <img :src=\"profileImage\" alt=\"Profile\" width=\"100\" />\n          </v-avatar>\n          <label>\n            <v-icon>mdi-image</v-icon>\n            <input type=\"file\" @change=\"onFileChange\" style=\"display: none;\">\n          </label>\n\n\n          <!-- Username -->\n          <p>@{{ username }}</p>\n          <input v-model=\"tempUsername\" placeholder=\"Choose a username\" />\n\n          <!-- Submit Button -->\n          <button @click=\"updateProfile\">Update Profile</button>\n\n          <TweetsList :tweets=\"tweets\" @removeTweet=\"removeTweet\" :key=\"tweetsUpdateTime\" />\n\n        </v-col>\n\n        <v-col cols=\"3\">\n          <TrendingPosts :topics=\"trendingTopics\" class=\"sideB\" />\n          <WhoToFollow :users=\"usersToFollow\" class=\"sideB\" />\n        </v-col>\n      </v-row>\n    </v-row>\n  </div>\n</template>\n\n\n\n<script>\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, doc, getDoc, updateDoc, writeBatch, query, orderBy, getDocs, where } from 'firebase/firestore';\n\nimport SideBar from './SideBar.vue';\nimport TrendingPosts from './TrendingPosts.vue';\nimport WhoToFollow from './WhoToFollow.vue';\nimport TweetsList from './TweetsList.vue';\n\n\n\n\n\nexport default {\n  components: {\n    SideBar,\n    TrendingPosts,\n    WhoToFollow,\n    TweetsList\n  },\n  name: 'ProfilePage',\n  data() {\n    return {\n      tweets: [],\n      loading: true,\n      userID: null,\n      username: '',\n      updatingProfile: false,\n       tempUsername: '',\n      profileImage: '',\n      trendingTopics: [\n        { title: 'MLB', subtitle: '2 hours ago' },\n        { title: 'Anthony Davis', subtitle: '1,032 posts' },\n      ],\n      usersToFollow: [{ name: 'AmazingAyo' }],\n    };\n  },\n  methods: {\n\n  \n        async updateProfile() {\n            try {\n                this.updatingProfile = true;\n\n                const db = getFirestore();\n                const userDocRef = doc(db, 'users', this.userID);\n\n                // Update the username in Firestore\n                await updateDoc(userDocRef, {\n                    username: this.tempUsername\n                });\n\n                // Update username in all the user's tweets\n                await this.updateUsernameInTweets(this.tempUsername);\n\n                // Update the local username property and re-fetch data\n                this.username = this.tempUsername;\n                await this.fetchTweets();\n\n                // Reset the tempUsername property\n                this.tempUsername = '';\n\n            } catch (error) {\n                console.error(\"Error updating profile:\", error);\n                // Handle the error, e.g., show an error message to the user\n            } finally {\n                this.updatingProfile = false;\n            }\n        },\n\n        async updateUsernameInTweets(newUsername) {\n            const db = getFirestore();\n            const tweetsQuery = query(\n                collection(db, 'tweets'),\n                where('userId', '==', this.userID)\n            );\n\n            const tweetDocs = await getDocs(tweetsQuery);\n\n            const batch = writeBatch(db); // Use a batch to update multiple documents at once\n\n            tweetDocs.forEach((docSnapshot) => {\n                const tweetRef = doc(db, 'tweets', docSnapshot.id);\n                batch.update(tweetRef, { username: newUsername }); // Assuming 'username' is the field's name in tweets\n            });\n\n            await batch.commit();\n        },\n    async fetchUserProfile(userId) {\n      const db = getFirestore();\n      const userDocRef = doc(db, 'users', userId); // Adjust the path as needed\n      const userProfile = await getDoc(userDocRef);\n\n      if (userProfile.exists()) {\n        this.username = userProfile.data().username || ''; // Handle undefined username\n        this.profileImage = userProfile.data().profileImage || ''; // Handle undefined profileImage\n      } else {\n        console.error('User profile does not exist:', userId);\n      }\n    },\n  async fetchTweets() {\n  const db = getFirestore();\n  const tweetsCollection = collection(db, 'tweets');\n  const tweetsQuery = query(\n    tweetsCollection,\n    where('userId', '==', this.userID), // Filter tweets by user ID\n    orderBy('timestamp', 'desc')\n  );\n\n  const tweetDocs = await getDocs(tweetsQuery);\n  this.tweets = tweetDocs.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n  console.log('Fetched tweets in parent:', this.tweets);\n},\n\n  },\n  mounted() {\n    const auth = getAuth();\n    onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        this.userID = user.uid;\n\n        // Fetch user profile and tweets\n        await this.fetchUserProfile(user.uid);\n        this.fetchTweets();\n\n        this.loading = false;\n      } else {\n        this.loading = false;\n        console.log('User is not authenticated');\n      }\n    });\n  },\n};\n</script>\n\n\n\n<style scoped>\n.sideB {\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  padding: 0px 10px;\n  margin-top: 0px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":";;gEAeUA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;;;;;;;;uBAd7BC,mBAAA,CA2CM,cA1CSC,KAAA,CAAAC,OAAO,I,cAApBC,YAAA,CAIQC,gBAAA;IAAAC,GAAA;EAAA;sBAHN,MAEQ,CAFRC,YAAA,CAEQC,gBAAA;MAFDC,KAAK,EAAC;IAAa;wBAAC,MAE3B,C,iBAF2B,cAE3B,E;;;;;uBAIFR,mBAAA,CAkCQS,SAAA;IAAAJ,GAAA;EAAA,IAnCRK,mBAAA,+CAAkD,EAClDJ,YAAA,CAkCQF,gBAAA;sBAjCN,MAgCQ,CAhCRE,YAAA,CAgCQF,gBAAA;wBA/BN,MAEQ,CAFRE,YAAA,CAEQC,gBAAA;QAFDI,IAAI,EAAC;MAAG;0BACb,MAAW,CAAXL,YAAA,CAAWM,kBAAA,E;;UAEbN,YAAA,CAsBQC,gBAAA;QAtBDI,IAAI,EAAC;MAAG;0BACb,MAA0B,CAA1BE,UAA0B,EAE1BH,mBAAA,qBAAwB,EACPT,KAAA,CAAAa,YAAY,I,cAA5BX,YAAA,CAEUY,mBAAA;UAAAV,GAAA;QAAA;4BADT,MAAqD,CAArDN,mBAAA,CAAqD;YAA/CiB,GAAG,EAAEf,KAAA,CAAAa,YAAY;YAAEG,GAAG,EAAC,SAAS;YAACC,KAAK,EAAC;;;iDAE/CnB,mBAAA,CAGQ,gBAFNO,YAAA,CAA0Ba,iBAAA;4BAAlB,MAAS,C,iBAAT,WAAS,E;;YACjBpB,mBAAA,CAAiE;UAA1DqB,IAAI,EAAC,MAAM;UAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,YAAA,IAAAD,IAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;UAAEG,KAAsB,EAAtB;YAAA;UAAA;6CAI5ChB,mBAAA,cAAiB,EACjBX,mBAAA,CAAsB,WAAnB,GAAC,GAAA4B,gBAAA,CAAG1B,KAAA,CAAA2B,QAAQ,kB,gBACf7B,mBAAA,CAAgE;qEAAhDE,KAAA,CAAA4B,YAAY,GAAAC,MAAA;UAAEC,WAAW,EAAC;uDAA1B9B,KAAA,CAAA4B,YAAY,E,GAE5BnB,mBAAA,mBAAsB,EACtBX,mBAAA,CAAsD;UAA7CiC,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEU,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAX,IAAA,CAAa;WAAE,gBAAc,I,cAE7CpB,YAAA,CAAkFgC,qBAAA;UAArEC,MAAM,EAAEnC,KAAA,CAAAmC,MAAM;UAAGC,aAAW,EAAEb,IAAA,CAAAc,WAAW;UAAGjC,GAAG,EAAEmB,IAAA,CAAAe;;;UAIhEjC,YAAA,CAGQC,gBAAA;QAHDI,IAAI,EAAC;MAAG;0BACb,MAAwD,CAAxDL,YAAA,CAAwDkC,wBAAA;UAAxCC,MAAM,EAAExC,KAAA,CAAAyC,cAAc;UAAElC,KAAK,EAAC;6CAC9CF,YAAA,CAAoDqC,sBAAA;UAAtCC,KAAK,EAAE3C,KAAA,CAAA4C,aAAa;UAAErC,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}