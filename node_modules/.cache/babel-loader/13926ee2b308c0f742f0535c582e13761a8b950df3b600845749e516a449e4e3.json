{"ast":null,"code":"import SideBar from './SideBar.vue';\nimport TweetBox from './TweetBox.vue';\nimport TrendingPosts from './TrendingPosts.vue';\nimport WhoToFollow from './WhoToFollow.vue';\nimport TweetsList from './TweetsList.vue';\nimport { getFirestore, collection, getDocs, orderBy, query } from 'firebase/firestore';\nexport default {\n  name: 'HomePage',\n  components: {\n    SideBar,\n    TweetBox,\n    TrendingPosts,\n    WhoToFollow,\n    TweetsList\n  },\n  data: () => ({\n    tweets: [],\n    trendingTopics: [{\n      title: 'MLB',\n      subtitle: '2 hours ago'\n    }, {\n      title: 'Anthony Davis',\n      subtitle: '1,032 posts'\n    }],\n    usersToFollow: [{\n      name: 'AmazingAyo'\n    }]\n  }),\n  methods: {\n    updateTweetLikedStatus({\n      tweetId,\n      status\n    }) {\n      const tweetToUpdate = this.tweets.find(tweet => tweet.id === tweetId);\n      if (tweetToUpdate) {\n        tweetToUpdate.liked = status;\n      }\n    },\n    updateTweeCommentedStatus({\n      tweetId,\n      status\n    }) {\n      const tweetToUpdate = this.tweets.find(tweet => tweet.id === tweetId);\n      if (tweetToUpdate) {\n        tweetToUpdate.commented = status;\n      }\n    },\n    updateTweetRepeatStatus({\n      tweetId,\n      status\n    }) {\n      const tweetToUpdate = this.tweets.find(tweet => tweet.id === tweetId);\n      if (tweetToUpdate) {\n        tweetToUpdate.repeated = status;\n      }\n    },\n    removeTweet(tweetId) {\n      this.tweets = this.tweets.filter(tweet => tweet.id !== tweetId);\n    },\n    async fetchTweets() {\n      const db = getFirestore();\n      const tweetsCollection = collection(db, 'tweets');\n      const tweetsQuery = query(tweetsCollection, orderBy('timestamp', 'desc'));\n      const tweetDocs = await getDocs(tweetsQuery);\n      this.tweets = tweetDocs.docs.map(doc => {\n        const data = doc.data();\n        return {\n          id: doc.id,\n          userId: data.userId,\n          // Include the userId\n          ...data\n        };\n      });\n      console.log('Fetched tweets in parent:', this.tweets);\n    }\n  },\n  mounted() {\n    this.fetchTweets();\n  }\n};","map":{"version":3,"names":["SideBar","TweetBox","TrendingPosts","WhoToFollow","TweetsList","getFirestore","collection","getDocs","orderBy","query","name","components","data","tweets","trendingTopics","title","subtitle","usersToFollow","methods","updateTweetLikedStatus","tweetId","status","tweetToUpdate","find","tweet","id","liked","updateTweeCommentedStatus","commented","updateTweetRepeatStatus","repeated","removeTweet","filter","fetchTweets","db","tweetsCollection","tweetsQuery","tweetDocs","docs","map","doc","userId","console","log","mounted"],"sources":["/Users/kharelthompson/Coding/tc23/src/components/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row>\n      <v-col cols=\"3\">\n        <SideBar />\n      </v-col>\n      <v-col cols=\"6\">\n        <TweetBox @tweetPosted=\"fetchTweets\" />\n        <TweetsList\n          :tweets=\"tweets\"\n          :tweetData=\"tweet\"\n          :userId=\"currentUserId\"\n          @removeTweet=\"removeTweet\"\n          @tweetLikedStatusUpdated=\"updateTweetLikedStatus\"\n          @tweetRepeatStatusUpdated=\"updateTweetRepeatStatus\"\n          @tweetCommentedStatusUpdated=\"updateTweetCommentStatus\"\n        />\n      </v-col>\n      <v-col cols=\"3\">\n        <TrendingPosts :topics=\"trendingTopics\" class=\"sideB\" />\n        <WhoToFollow :users=\"usersToFollow\" class=\"sideB\" />\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport SideBar from './SideBar.vue'\nimport TweetBox from './TweetBox.vue'\nimport TrendingPosts from './TrendingPosts.vue'\nimport WhoToFollow from './WhoToFollow.vue'\nimport TweetsList from './TweetsList.vue'\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  orderBy,\n  query,\n} from 'firebase/firestore'\n\nexport default {\n  name: 'HomePage',\n  components: {\n    SideBar,\n    TweetBox,\n    TrendingPosts,\n    WhoToFollow,\n    TweetsList,\n  },\n  data: () => ({\n    tweets: [],\n    trendingTopics: [\n      { title: 'MLB', subtitle: '2 hours ago' },\n      { title: 'Anthony Davis', subtitle: '1,032 posts' },\n    ],\n    usersToFollow: [{ name: 'AmazingAyo' }],\n  }),\n  methods: {\n    updateTweetLikedStatus({ tweetId, status }) {\n      const tweetToUpdate = this.tweets.find((tweet) => tweet.id === tweetId)\n      if (tweetToUpdate) {\n        tweetToUpdate.liked = status\n      }\n    },\n        updateTweeCommentedStatus({ tweetId, status }) {\n      const tweetToUpdate = this.tweets.find((tweet) => tweet.id === tweetId)\n      if (tweetToUpdate) {\n        tweetToUpdate.commented = status\n      }\n    },\n    updateTweetRepeatStatus({ tweetId, status }) {\n      const tweetToUpdate = this.tweets.find((tweet) => tweet.id === tweetId)\n      if (tweetToUpdate) {\n        tweetToUpdate.repeated = status\n      }\n    },\n    removeTweet(tweetId) {\n      this.tweets = this.tweets.filter((tweet) => tweet.id !== tweetId)\n    },\n    async fetchTweets() {\n      const db = getFirestore()\n      const tweetsCollection = collection(db, 'tweets')\n      const tweetsQuery = query(tweetsCollection, orderBy('timestamp', 'desc'))\n      const tweetDocs = await getDocs(tweetsQuery)\n\n      this.tweets = tweetDocs.docs.map((doc) => {\n        const data = doc.data()\n        return {\n          id: doc.id,\n          userId: data.userId, // Include the userId\n          ...data,\n        }\n      })\n      console.log('Fetched tweets in parent:', this.tweets)\n    },\n  },\n  mounted() {\n    this.fetchTweets()\n  },\n}\n</script>\n\n<style scoped>\n.sideB {\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  padding: 0px 10px;\n  margin-top: 0px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"AA2BA,OAAOA,OAAM,MAAO,eAAc;AAClC,OAAOC,QAAO,MAAO,gBAAe;AACpC,OAAOC,aAAY,MAAO,qBAAoB;AAC9C,OAAOC,WAAU,MAAO,mBAAkB;AAC1C,OAAOC,UAAS,MAAO,kBAAiB;AACxC,SACEC,YAAY,EACZC,UAAU,EACVC,OAAO,EACPC,OAAO,EACPC,KAAK,QACA,oBAAmB;AAE1B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVX,OAAO;IACPC,QAAQ;IACRC,aAAa;IACbC,WAAW;IACXC;EACF,CAAC;EACDQ,IAAI,EAAEA,CAAA,MAAO;IACXC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,CACd;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAc,CAAC,EACzC;MAAED,KAAK,EAAE,eAAe;MAAEC,QAAQ,EAAE;IAAc,CAAC,CACpD;IACDC,aAAa,EAAE,CAAC;MAAEP,IAAI,EAAE;IAAa,CAAC;EACxC,CAAC,CAAC;EACFQ,OAAO,EAAE;IACPC,sBAAsBA,CAAC;MAAEC,OAAO;MAAEC;IAAO,CAAC,EAAE;MAC1C,MAAMC,aAAY,GAAI,IAAI,CAACT,MAAM,CAACU,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAC,KAAML,OAAO;MACtE,IAAIE,aAAa,EAAE;QACjBA,aAAa,CAACI,KAAI,GAAIL,MAAK;MAC7B;IACF,CAAC;IACGM,yBAAyBA,CAAC;MAAEP,OAAO;MAAEC;IAAO,CAAC,EAAE;MACjD,MAAMC,aAAY,GAAI,IAAI,CAACT,MAAM,CAACU,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAC,KAAML,OAAO;MACtE,IAAIE,aAAa,EAAE;QACjBA,aAAa,CAACM,SAAQ,GAAIP,MAAK;MACjC;IACF,CAAC;IACDQ,uBAAuBA,CAAC;MAAET,OAAO;MAAEC;IAAO,CAAC,EAAE;MAC3C,MAAMC,aAAY,GAAI,IAAI,CAACT,MAAM,CAACU,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAC,KAAML,OAAO;MACtE,IAAIE,aAAa,EAAE;QACjBA,aAAa,CAACQ,QAAO,GAAIT,MAAK;MAChC;IACF,CAAC;IACDU,WAAWA,CAACX,OAAO,EAAE;MACnB,IAAI,CAACP,MAAK,GAAI,IAAI,CAACA,MAAM,CAACmB,MAAM,CAAER,KAAK,IAAKA,KAAK,CAACC,EAAC,KAAML,OAAO;IAClE,CAAC;IACD,MAAMa,WAAWA,CAAA,EAAG;MAClB,MAAMC,EAAC,GAAI7B,YAAY,CAAC;MACxB,MAAM8B,gBAAe,GAAI7B,UAAU,CAAC4B,EAAE,EAAE,QAAQ;MAChD,MAAME,WAAU,GAAI3B,KAAK,CAAC0B,gBAAgB,EAAE3B,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;MACxE,MAAM6B,SAAQ,GAAI,MAAM9B,OAAO,CAAC6B,WAAW;MAE3C,IAAI,CAACvB,MAAK,GAAIwB,SAAS,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAK;QACxC,MAAM5B,IAAG,GAAI4B,GAAG,CAAC5B,IAAI,CAAC;QACtB,OAAO;UACLa,EAAE,EAAEe,GAAG,CAACf,EAAE;UACVgB,MAAM,EAAE7B,IAAI,CAAC6B,MAAM;UAAE;UACrB,GAAG7B;QACL;MACF,CAAC;MACD8B,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC9B,MAAM;IACtD;EACF,CAAC;EACD+B,OAAOA,CAAA,EAAG;IACR,IAAI,CAACX,WAAW,CAAC;EACnB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}